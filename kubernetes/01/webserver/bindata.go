// Package main Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// Dockerfile
// course.yaml
// current.md
// docker-compose.yaml
// finish.md
// index.html
// intro.md
// tasks/1/courseData.sh
// tasks/1/foreground.sh
// tasks/1/task.md
// tasks/1/verify.sh
// tasks/2/courseData.sh
// tasks/2/foreground.sh
// tasks/2/task.md
// tasks/2/verify.sh
// tasks/3/courseData.sh
// tasks/3/foreground.sh
// tasks/3/task.md
// tasks/3/verify.sh
// tasks/4/courseData.sh
// tasks/4/foreground.sh
// tasks/4/task.md
// tasks/4/verify.sh
// tasks/5/courseData.sh
// tasks/5/foreground.sh
// tasks/5/task.md
// tasks/5/verify.sh
// tasks/6/courseData.sh
// tasks/6/foreground.sh
// tasks/6/task.md
// tasks/6/verify.sh
// tasks/7/courseData.sh
// tasks/7/foreground.sh
// tasks/7/task.md
// tasks/7/verify.sh
// webserver/index.html
// webserver/test.go_backup
// webserver/test.yml
// webserver/web.service
// webserver/webserver.go
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x6f\x6b\xdb\x3c\x14\xc5\xdf\xfb\x53\x1c\x4c\xa9\x9f\xa7\x4c\x52\xb3\x41\x09\x09\x19\xde\xda\x24\x0b\x63\x75\x49\x19\xdb\xa0\x74\xc8\xb6\xac\x88\xd8\x56\x91\xe4\xa4\xa1\xe9\x77\x1f\xfe\x93\xd9\x63\x6f\xf6\xca\x97\x9f\xce\x3d\xf7\xfa\x72\x16\xeb\xe8\x0b\xa4\xce\x79\x29\xc1\x2d\xe2\x4a\xe5\xa9\xf7\x2d\x5a\x7f\xbe\x59\xad\xc1\xa4\x66\xd6\x24\x6c\x2f\x62\x2b\xcc\x4e\x18\xef\x3a\xba\xfb\x01\xca\x2e\x40\x99\xe7\xad\xbf\xde\x22\x53\x65\x0a\xca\x1c\xb7\x5b\x0b\xe2\x0e\x4f\x02\x29\x8e\xb0\x22\x45\x30\x4a\x83\xba\xd4\xc6\xe1\x88\x67\x6e\xa4\x05\x59\x2d\x10\x73\xbb\x01\x49\xe0\x8b\x64\xa3\x11\x90\x60\x8a\x24\xc5\x62\x7a\xf2\xea\x6c\xb2\x93\x8d\x0d\x1f\xc3\xc6\x7f\x11\x4e\x6d\xf8\x40\x59\xc8\x42\x19\xf8\x38\x02\x0f\x1e\x00\xf0\xfd\x16\xc1\xc7\xf9\x72\x75\xfb\xf2\x64\x54\xe9\xe0\x27\xba\x32\x56\xd8\x89\xff\xfa\xa2\xb2\xff\xd8\x23\x39\x63\xff\x77\x4f\xc4\x9f\xa2\x66\x3b\x61\x54\x76\xf8\x8d\x81\x16\x4c\xe0\xbf\x39\xbb\x6c\x25\xf5\x50\x5a\xa4\x03\x4d\x4d\x26\xc0\x40\x93\x69\x23\xa4\xd1\x55\x39\x94\xf5\xb0\xb6\xc3\x49\xdb\x6e\x75\xc3\x1d\x1f\x68\x7b\xd8\x69\x5f\x03\xbc\xef\x28\x3d\xf0\x22\x6f\xef\x2c\x35\xa4\x70\x20\x15\xa4\x72\x9b\x2a\xa6\x89\x2e\x98\xd4\x24\x56\x65\x5a\x1b\x0e\x4a\x4a\x29\xce\xcf\xbb\xdb\xf4\x1c\xf4\xcf\x97\x65\x14\xdd\xcf\x72\x55\x56\xcf\x58\x46\x1f\xd6\xd7\x9f\x66\xef\xc6\x57\xf5\x9c\x26\x03\x20\x75\xc3\x05\x95\xba\xef\x28\x76\x38\x79\xed\x45\xec\x79\x5e\x13\x1e\x1b\x8b\x5c\xf1\xad\xae\xd8\x56\x95\xe9\xa4\xe0\xd6\x09\x43\x46\x74\x74\x45\xdf\xf6\x49\xda\x71\xc3\x7e\x36\xeb\x79\x6d\x88\x08\xc9\x8c\x2e\x66\xed\xb0\xbf\x82\xc6\x06\x07\xa8\xb3\xf6\x2f\x2d\x7b\x11\x37\xb1\x6c\xb4\x7b\x11\xd3\x9a\xab\x44\x80\x09\x97\x30\x7b\xb0\x4e\x14\x69\xf7\x65\xcd\x51\xdb\x3a\x71\x39\x44\xc9\xe3\x5c\x34\xbf\x35\xff\x7e\x17\xdd\xcf\x31\xbe\x1c\x8f\x7e\x05\x00\x00\xff\xff\xb6\xf1\xf4\x94\x1d\x03\x00\x00")

func dockerfileBytes() ([]byte, error) {
	return bindataRead(
		_dockerfile,
		"Dockerfile",
	)
}

func dockerfile() (*asset, error) {
	bytes, err := dockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Dockerfile", size: 797, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _courseYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x4d\xca\xc3\x20\x10\xc6\xf1\xbd\xa7\x98\x0b\xbc\x09\xaf\x9f\x90\x75\x2f\x12\x1a\xd3\x96\xd2\x0a\x9a\x14\x7a\xfb\x22\x2e\x74\x33\x3c\xb3\x12\xff\x3c\x03\xbf\x6b\x3a\x73\x89\x65\x51\x7f\x8a\xa8\x7d\x2e\xeb\xb1\x2e\x44\xc7\x5a\x9e\x65\xfe\x9f\x7b\x9c\xca\x5d\x11\xed\x29\xc7\x5b\x4e\xe7\x7b\x1b\x46\x3d\xb6\x51\xed\x0b\x51\x1f\xd4\x77\x7a\x6d\x8a\xe8\x13\xf3\x63\xff\x0e\xb7\x2d\xd4\x3b\xc6\xa0\x25\x06\x8d\x0c\x9a\x37\x68\x6c\x30\x12\x83\x41\x06\xc3\x1b\x0c\x36\x58\x89\xc1\x22\x83\xe5\x0d\x16\x1b\x9c\xc4\xe0\x90\xc1\xf1\x06\x87\x0d\x5e\x62\xf0\xc8\xe0\x79\x83\xc7\x86\x20\x31\x04\x64\x08\xbc\x21\x0c\x86\x5f\x00\x00\x00\xff\xff\xf1\x9d\x07\x87\xa5\x03\x00\x00")

func courseYamlBytes() ([]byte, error) {
	return bindataRead(
		_courseYaml,
		"course.yaml",
	)
}

func courseYaml() (*asset, error) {
	bytes, err := courseYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "course.yaml", size: 933, mode: os.FileMode(420), modTime: time.Unix(1571736422, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _currentMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x3d\x4e\x03\x31\x10\x85\x7b\x9f\xe2\xa1\xd4\xbe\x00\x6d\x56\x42\x81\x10\xd2\x51\x7b\xbd\x93\xec\x68\x07\x4f\x34\x1e\x63\x2d\xa7\x47\x81\x22\x5b\xbe\x1f\x7d\xfa\x76\x38\x14\xf8\xcc\x15\x95\xb2\xb3\x16\xac\xda\xd0\x59\x04\x93\xe2\xa2\x22\xda\xb9\x5c\x9f\x43\x88\x38\x14\x76\x4e\xc2\x3f\x84\xb7\x36\x92\x15\x72\xaa\xd8\x6b\x71\x53\xc1\x59\x12\x97\x10\xef\xf9\xc2\xd7\x66\x84\xa5\x8d\x94\x5d\xd0\x9c\x85\x7d\x0d\x11\x03\xdd\x6e\xa2\x2b\xce\x1f\x03\x4e\xe4\x5d\x6d\x09\x11\xaf\xca\x05\x9f\x6a\x0b\x19\x4e\x3a\xd1\xdf\x31\xab\x25\xa7\x6d\x8d\xce\x3e\x63\xdf\xaa\xeb\x17\x8e\x69\x24\xf9\x27\xde\x81\x1b\x9f\x21\xd5\x79\xd4\x64\xd3\x63\x7d\x27\x37\xce\x35\x56\xb2\x6f\xb2\x10\x76\x78\x51\x9d\x70\x6c\x79\x79\x0a\xbf\x01\x00\x00\xff\xff\xf0\x3a\xb0\x00\x02\x01\x00\x00")

func currentMdBytes() ([]byte, error) {
	return bindataRead(
		_currentMd,
		"current.md",
	)
}

func currentMd() (*asset, error) {
	bytes, err := currentMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "current.md", size: 258, mode: os.FileMode(420), modTime: time.Unix(1571735367, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dockerComposeYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\xcb\x8e\xe3\x20\x10\xbc\xfb\x2b\x5a\xb3\xe7\xf8\x91\x64\xb3\x19\xce\xfb\x1f\x11\x31\x6d\x2f\x32\x06\x44\x37\x9e\xcd\xdf\xaf\xfc\xc0\xb1\x35\x3b\x52\x4e\x73\x41\x14\x55\xd5\xb4\x5d\xcd\x80\x81\xb4\xb3\x02\xde\x8e\xf9\xe9\x2d\xcb\x08\xc3\xa0\x6b\x24\x91\x01\xf4\x92\x18\xc3\xb8\x03\xf8\x01\xba\x97\x2d\x0a\xa0\x3b\x1a\x2d\x3b\x17\x8b\x4e\x5b\x25\x66\xcd\xa1\xca\xab\x4b\x7e\x9c\x94\xf7\xa8\x8d\x9a\x4d\x00\xb5\xb3\x8c\x7f\x59\x40\x5e\x2c\x27\xca\xd5\x1d\x86\x46\x1b\x14\xf0\x7b\xdd\x67\x49\x2c\xb5\xc5\x70\xb3\xb2\x47\xb1\xdc\x3f\x51\x7f\x1c\xf1\xa7\xc3\xc1\x99\xd8\xcf\xad\x02\x1c\xa0\x30\xfa\x5e\xf4\x4e\x45\x83\x24\x76\x20\xb8\x24\xa1\x07\x15\x0d\x15\x75\x1b\x5c\xf4\x62\x0f\x93\x66\x90\x61\x72\xaf\xed\xa8\x89\xe1\xde\x37\xcf\xbb\x42\xb4\x69\xcb\xfd\x6c\xf5\x2e\xf0\x2a\x78\x2f\xdf\x4b\x31\x2e\x0b\xbe\x96\xd7\x4a\x8c\xcb\x8a\xc5\x35\x71\xe7\xf3\x49\x9c\xcf\xa7\xc4\x8c\xf0\x92\xb0\x0f\x7a\xd0\x06\x5b\x54\x02\x38\xc4\xe5\x47\xf9\x48\x02\xe6\x52\xda\xd7\x62\x52\x49\x9e\x49\xe6\xc7\x46\x4a\x58\xc7\xa0\xf9\x71\x73\x9e\x53\x28\x87\xf1\xb4\x76\xbd\x17\xd1\xd6\xce\x36\xda\xe2\xfc\x89\x01\x89\x65\x60\x01\xd1\x1a\x24\x3a\x10\x3b\xef\x17\xce\x22\x7f\xb8\xd0\x51\x2a\xd2\x5d\xc9\xb8\x5a\x9a\x84\xc7\x4e\x86\xf3\x4d\x2a\x15\x90\xc6\xee\x7e\x1d\xf3\x53\x95\x97\xf9\x31\xcb\x00\x46\x6b\x1a\xa5\xff\x0f\x92\x75\x0a\xb7\x63\xf4\x4c\x7c\xf6\x7e\x4e\xfc\xa5\xcc\x5f\x4b\xfd\xc5\xdc\x77\xc9\xef\xb3\xff\x3a\xa6\x32\xff\xf9\xad\x41\x29\xf4\x68\x15\xdd\x9c\x7d\x96\xd9\x3c\x9a\xaf\x73\xcc\xb6\xd4\x3e\x5e\xed\x65\x9f\x0c\x2a\xe8\x01\x83\x00\x85\x8d\x8c\x86\x9f\x0f\xbd\xd1\xed\xa6\xf1\x78\xb7\xc8\x9b\x31\x28\x8b\xea\xb2\x8e\x4a\x2b\x19\x3f\xe4\x63\x43\x57\xd9\xbf\x00\x00\x00\xff\xff\xe6\xfd\x9c\x5c\x8a\x04\x00\x00")

func dockerComposeYamlBytes() ([]byte, error) {
	return bindataRead(
		_dockerComposeYaml,
		"docker-compose.yaml",
	)
}

func dockerComposeYaml() (*asset, error) {
	bytes, err := dockerComposeYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "docker-compose.yaml", size: 1162, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _finishMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcd\xb1\x8e\xc2\x30\x0c\xc6\xf1\xdd\x4f\xe1\xeb\x0d\x37\x45\xb7\x9f\x7a\x9d\x58\x98\x79\x82\x90\xb8\xa8\xaa\x63\x47\xb5\x03\xe2\xed\x51\x17\x50\x60\xfd\xe9\xf3\xdf\xdf\x78\xf4\x1f\xc3\x83\x0a\x7d\x01\x9c\xb4\x10\x36\xa3\xb9\x31\x26\x2d\x25\x4a\x36\x74\xc5\x55\xf4\xf6\x07\x30\xd6\x8d\x30\x71\x34\xfb\x1f\xe6\x85\x69\x98\x00\xd6\x76\xa6\xe4\x8c\x17\x72\x14\xcd\x64\x4f\x49\xdc\xcc\x69\x0b\x8b\xcc\xda\xcd\x92\x96\xaa\x42\xe2\xe6\xd1\x9b\xf5\x8d\xaa\xd9\x3a\xc8\x54\x59\xef\x65\x9f\x77\x6e\xd7\xf4\xba\x74\xad\x6f\xdf\x77\xd9\x5b\xf8\x29\x21\x44\xe6\x20\xb1\x90\xd5\x98\xc8\x60\xfc\xad\x1b\x4d\xf0\x08\x00\x00\xff\xff\xfb\x78\x63\x83\x0c\x01\x00\x00")

func finishMdBytes() ([]byte, error) {
	return bindataRead(
		_finishMd,
		"finish.md",
	)
}

func finishMd() (*asset, error) {
	bytes, err := finishMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "finish.md", size: 268, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x6d\x8b\x1b\x37\x10\xfe\x7e\xbf\x62\xa2\x50\xd2\x42\xe5\xf5\x99\x6b\x13\xf6\x76\xcd\x25\x21\x85\x52\xc8\x97\xa6\x90\x6f\x87\x56\x1a\x7b\x15\xeb\x65\x2b\x8d\xed\x75\xc2\xfd\xf7\xa2\x7d\xf3\xfa\x7a\x0d\x94\xd0\x62\x8c\x34\x33\xda\x67\xe6\x99\x17\xed\x16\xcf\x94\x97\x74\x6a\x10\x6a\xb2\x66\x7d\x55\xa4\x05\x8c\x70\xdb\x92\xb1\xf5\x15\x40\x51\xa3\x50\x69\x03\x50\x58\x24\x01\xb2\x16\x21\x22\x95\x6c\x4f\x1b\xfe\x8a\xcd\x4d\x35\x51\xc3\xf1\xcf\xbd\x3e\x94\xec\x23\xff\xe3\x35\x7f\xeb\x6d\x23\x48\x57\x06\x19\x48\xef\x08\x1d\x95\xec\xd7\x77\x25\xaa\x2d\x5e\x3c\xe9\x84\xc5\x92\x1d\x34\x1e\x1b\x1f\x68\x76\xf8\xa8\x15\xd5\xa5\xc2\x83\x96\xc8\x3b\xe1\x47\xd0\x4e\x93\x16\x86\x47\x29\x0c\x96\xd7\x8b\xe5\x08\x15\x65\xd0\x0d\x41\x0c\xb2\x64\x29\x96\x98\x67\x99\x54\x6e\xf1\x29\x2a\x34\xfa\x10\x16\x0e\x29\x73\x8d\xcd\xee\x8e\x58\x49\x6f\x1b\xef\xd0\x51\xcc\x2e\xa4\x4f\xf1\x6e\x75\xa9\xe1\xc6\x0b\x85\x61\x61\x75\x82\x62\xeb\x22\xeb\x1d\x5d\x7a\x4d\x49\x2c\x99\xf5\x6a\x9f\xd8\x7e\x3d\x86\x6d\x9d\x7d\xc6\xe0\x15\x1e\xda\x6e\xc3\xad\xba\xbb\xce\x62\x90\xa3\xf4\x84\xaf\xce\x19\x14\x91\x4e\x06\x7b\xcf\x00\xcf\xad\x08\x3b\xf8\x32\x48\x00\x4a\xc7\xc6\x88\x53\x0e\xda\x19\xed\x90\x57\xc6\xcb\xdd\xed\x64\x4e\x59\x15\xda\xe5\xe0\xbc\xc3\x51\xfd\x30\xac\xa9\xce\x18\xe0\x0b\x4c\xc7\x37\xde\x11\xdf\x08\xab\xcd\x29\x87\x28\x5c\xe4\x11\x83\xde\xdc\x3e\x3a\x11\xf5\x67\xcc\x61\xf5\xaa\x69\x67\x16\xc2\x96\xb8\x30\x7a\xeb\x72\x90\xe8\x08\xc3\xcc\xd8\xf8\xa8\x49\x7b\x97\xc3\x46\xb7\xa8\x66\x96\xae\xc2\x39\x5c\x2f\x97\xdf\xcd\xb4\x1d\x97\x1a\xf5\xb6\xa6\x1c\x6e\x56\x97\x8e\x7c\x93\xc3\xf2\x16\x0c\x6e\xa8\xdb\x4c\x96\x4a\xc8\xdd\x36\xf8\xbd\x53\x5c\x7a\xe3\x43\x0e\xcf\x6f\x56\xe9\x37\x4f\x48\xa7\x3f\xd6\x9a\xce\xf9\x18\x11\x2a\xaf\x4e\xf3\x74\x54\xbe\x4d\x5c\xb5\xdb\xe6\x50\xf9\xa0\x30\xf0\xca\xcf\x43\xb1\xda\xf1\x33\x81\x8b\x28\xad\x08\xdb\x94\xf8\xeb\x65\xd3\x82\xd8\x93\x87\x65\xb7\xcc\x93\x22\x94\xea\xb0\x6f\x7e\x9a\x3d\x3a\x56\xe7\xce\xa2\xd2\x02\xbe\xb7\xa2\x1d\x7d\xbc\xfc\xf9\x65\xd3\xfe\x30\xab\xfe\x54\xc1\x59\x59\xae\x3b\xb0\x87\x19\x89\x8e\xd4\xe4\xec\xd2\xfe\xd0\x77\x59\x91\x0d\x5d\xd6\x4b\x46\xbb\x1d\x04\x34\x25\xeb\xd4\xb1\x46\x24\x06\x75\xc0\xcd\xb9\xc5\x2b\xef\x29\x1e\x05\xc9\x7a\x21\xbd\xcd\x6e\x32\xab\x1d\x9d\x7a\x35\x05\xd1\x2c\x64\x8c\xe3\x98\x7e\x03\xde\xfd\x41\x04\x2d\x2a\x83\x71\x11\x7b\xc4\x74\x45\x65\xe3\x1d\x55\x24\x7a\x83\x97\x61\x92\x40\xab\x92\xa5\x31\x19\x66\x32\xbb\x57\x82\x44\x1a\xac\xe1\xc0\xc8\xb2\x0a\xeb\xf4\xef\x85\x67\x9c\x43\xb1\xf1\xc1\x82\x90\xa9\x53\x4b\x96\x31\xb0\x48\xb5\x57\x25\x6b\x7c\x24\x36\x8e\xe0\x90\xb0\x74\x76\x0d\x9c\x8f\x68\x4a\x1f\x40\x1a\x11\x63\xc9\x2a\x72\x9c\xbc\x37\x95\x08\x0c\x82\x37\x58\xb2\x49\x4c\x6c\xb8\x11\x55\x4a\xc6\x87\x5e\x09\x47\x4d\x35\x54\x7b\x22\xef\x20\xf5\x6f\x13\x27\x67\x8f\x61\x3b\x33\xd8\xc0\x57\x23\x72\xa7\xb9\xc4\xfd\x45\x87\x48\x3d\xd2\x04\x94\xf8\xf6\x1e\xce\x68\x90\x10\x9b\xa0\xad\x08\x27\x06\x5d\x69\x4a\xf6\xc4\x1c\x33\xf0\x4e\x1a\x2d\x77\xe9\x76\x76\xca\x1f\x17\xc6\x4b\x91\xb2\xb4\x48\x35\x84\x12\x5e\x64\xf7\x69\xf8\x5e\xdc\xb2\x35\x14\x05\x87\x37\x42\xee\xa0\xc8\x7a\x8f\x13\x97\x4c\xe9\xc3\x37\x11\xfb\x1d\xa5\x77\xea\xff\x66\xe6\xb0\xa5\x8e\xd9\x7b\x6c\x09\xf8\x7a\xfd\x35\x66\xf3\xed\x13\x3d\xd5\xa5\xe9\x1f\x1a\x6b\xa4\xd1\xbf\x57\xe2\xbe\xb2\x3a\xbd\x18\xff\x3d\xa9\x54\x03\x78\xf3\xfa\xed\x6f\x8f\x02\x1d\x9a\xf6\xea\xdc\xc5\x8f\x82\x4b\x4c\xff\xfb\xe0\xde\xbf\xfb\xf8\x01\xfe\x96\xc5\x29\xb8\x69\xa4\xba\x41\xef\xe7\xbb\xc8\xfa\x8f\x95\xab\xbf\x02\x00\x00\xff\xff\x87\x4f\x29\x98\xbe\x08\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 2238, mode: os.FileMode(436), modTime: time.Unix(1571735367, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _introMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x3d\x4e\x03\x31\x10\x85\x7b\x9f\xe2\xa1\xd4\xbe\x00\x6d\x56\x42\x81\x10\xd2\x51\x7b\xbd\x93\xec\x68\x07\x4f\x34\x1e\x63\x2d\xa7\x47\x81\x22\x5b\xbe\x1f\x7d\xfa\x76\x38\x14\xf8\xcc\x15\x95\xb2\xb3\x16\xac\xda\xd0\x59\x04\x93\xe2\xa2\x22\xda\xb9\x5c\x9f\x43\x88\x38\x14\x76\x4e\xc2\x3f\x84\xb7\x36\x92\x15\x72\xaa\xd8\x6b\x71\x53\xc1\x59\x12\x97\x10\xef\xf9\xc2\xd7\x66\x84\xa5\x8d\x94\x5d\xd0\x9c\x85\x7d\x0d\x11\x03\xdd\x6e\xa2\x2b\xce\x1f\x03\x4e\xe4\x5d\x6d\x09\x11\xaf\xca\x05\x9f\x6a\x0b\x19\x4e\x3a\xd1\xdf\x31\xab\x25\xa7\x6d\x8d\xce\x3e\x63\xdf\xaa\xeb\x17\x8e\x69\x24\xf9\x27\xde\x81\x1b\x9f\x21\xd5\x79\xd4\x64\xd3\x63\x7d\x27\x37\xce\x35\x56\xb2\x6f\xb2\x10\x76\x78\x51\x9d\x70\x6c\x79\x79\x0a\xbf\x01\x00\x00\xff\xff\xf0\x3a\xb0\x00\x02\x01\x00\x00")

func introMdBytes() ([]byte, error) {
	return bindataRead(
		_introMd,
		"intro.md",
	)
}

func introMd() (*asset, error) {
	bytes, err := introMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "intro.md", size: 258, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks1CoursedataSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\x52\x06\x01\x85\x82\xa2\xd4\x82\xc4\xa2\xcc\xbc\x74\x85\xb4\xfc\x22\x05\xef\x50\x27\xd7\x20\x3f\xd7\x10\xd7\x60\x05\x90\x2c\x17\x76\x55\x2e\xfe\xce\xde\xae\x41\x30\x15\x5c\x80\x00\x00\x00\xff\xff\xbd\xc2\x23\xfb\x56\x00\x00\x00")

func tasks1CoursedataShBytes() ([]byte, error) {
	return bindataRead(
		_tasks1CoursedataSh,
		"tasks/1/courseData.sh",
	)
}

func tasks1CoursedataSh() (*asset, error) {
	bytes, err := tasks1CoursedataShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/1/courseData.sh", size: 86, mode: os.FileMode(509), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks1ForegroundSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\xe2\x02\x04\x00\x00\xff\xff\x30\x98\x82\x7d\x0e\x00\x00\x00")

func tasks1ForegroundShBytes() ([]byte, error) {
	return bindataRead(
		_tasks1ForegroundSh,
		"tasks/1/foreground.sh",
	)
}

func tasks1ForegroundSh() (*asset, error) {
	bytes, err := tasks1ForegroundShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/1/foreground.sh", size: 14, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks1TaskMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xbd\x6e\xc3\x30\x0c\x84\x77\x3d\x05\x01\xcf\x8e\x92\xf4\xdf\x73\x97\x0e\x05\x3a\x64\xe9\x66\x45\xa2\x1b\xc2\xb6\x68\x90\x54\x8b\xf6\xe9\x0b\xc7\xf6\x90\xf5\x70\xdf\x7d\x57\xc1\x29\x68\x0f\x07\xe7\xde\x32\x19\x85\x81\xfe\x10\xde\x83\x1a\x0a\x64\x4e\x08\x3f\x64\x17\x68\xfb\x72\xc6\x90\xc6\xd6\xb9\xaa\x82\x8f\x20\x61\x44\x43\xd1\xc6\xd5\x60\xdc\x63\x6e\xa0\x0d\xe7\x98\xb0\xdb\xed\x0f\xc7\xbb\xfb\x87\xc7\xa7\xe7\x97\x25\x68\xb7\x0a\x0c\xd4\x21\xa4\x22\xc1\x88\x67\xe0\xb8\x5f\xf7\x4e\x34\x5d\x97\x3e\xb9\x40\x0c\x19\x12\xaa\x09\xff\x42\x1c\xca\xf5\x47\xe4\xdc\xd1\xd7\x0a\xde\x1e\x02\x41\x45\xdb\x9a\xcb\xdc\x2b\xc7\x32\x62\xb6\xc5\xe3\x6a\xb8\x98\x4d\xda\x78\x3f\x33\x92\xd1\x50\x77\xc4\x3e\x71\x54\xaf\x68\x65\xf2\x93\x70\x2a\x71\xae\xd7\x98\xbf\x49\x38\xcf\xbc\x37\xe6\x41\xfd\x6a\xf2\x51\x30\x18\xd6\xab\xaa\xde\x62\xf7\x1f\x00\x00\xff\xff\x9e\xaf\x5e\xcd\x42\x01\x00\x00")

func tasks1TaskMdBytes() ([]byte, error) {
	return bindataRead(
		_tasks1TaskMd,
		"tasks/1/task.md",
	)
}

func tasks1TaskMd() (*asset, error) {
	bytes, err := tasks1TaskMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/1/task.md", size: 322, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks1VerifySh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x5f\x6f\xda\x30\x14\xc5\xdf\xfd\x29\xce\x32\x14\x36\xa9\x8e\x09\xdb\x3a\x40\x6d\x35\x34\x81\x54\xad\x1d\x53\xe1\x61\x12\x62\xad\x13\x5f\xc0\xc2\xb1\xa3\xd8\x19\xed\x08\xdf\x7d\x02\xf6\xa7\xda\xdb\xde\x2c\xff\x8e\x7f\xd7\xf7\xbc\x7c\x21\x32\x6d\x45\x26\xfd\x9a\xb1\x39\xf8\x12\x22\x71\x1b\x2c\x10\xc7\xa0\x7c\xed\xa0\x9c\x25\x34\x0d\xdb\xd4\x19\xe5\xc1\x60\x45\x01\xd6\x29\xf2\xb8\x12\x8a\xbe\x0b\x5b\x1b\x83\xee\x55\x9c\x22\x8e\x8f\x21\xa9\x0a\x04\xb7\x21\x0b\xa3\x7d\x40\x83\x55\x45\x25\x64\x96\x2b\x5a\x26\x9d\xb4\xfb\xe6\xed\xbb\xf3\xf7\xbd\xfe\xe9\xe2\xb9\x24\x8e\xd9\x1c\x0f\xff\xaf\x68\x20\xb7\x1b\xb4\x77\x65\xa5\x6d\x40\xab\xbb\x6f\xa3\x81\x27\x85\xb6\x17\xf3\x6f\x1d\xde\x5f\x08\xb1\x6a\x3f\x80\x1b\x42\xb7\x83\x05\x0e\x93\x9e\xef\x06\x7a\xd4\x01\x1d\xc6\x66\xc3\xe9\xa7\xfb\xe9\xc7\xc9\xdd\xe8\x32\x4a\x23\xe6\x5d\x5d\xe5\x04\xe1\xca\x20\x92\xda\x53\xc5\x72\x19\x70\x71\x81\xd1\x64\x8c\x06\x79\x5d\x19\x70\x0f\xfe\x15\x5f\x26\xd3\x19\x38\x57\x32\x48\x7c\xe0\x58\x87\x50\xfa\x81\x10\xbe\x9f\x2f\xab\xa7\x42\x85\x5e\x42\x8f\x94\xd7\x81\xb8\x2c\x75\x42\x35\xdf\x92\x0f\x3c\x4d\x64\x21\x7f\x38\x2b\xb7\x3e\xc9\x5d\x21\x14\x2d\x65\x6d\x82\x30\x32\xbb\x37\x6e\xb5\xa2\xea\xdf\x8e\xd9\x8e\x01\x51\x90\x99\xa1\x68\x80\xe8\xd0\x55\x65\x29\x90\x8f\xce\x8e\x40\x17\xe4\x83\x2c\xca\x03\x6c\xbd\x52\x32\x10\x38\xd7\xde\xf1\xde\x79\x27\xbd\xb4\x1e\x9c\xd7\x21\x7f\x7d\x4a\x97\xf2\xc9\x38\xa9\xa2\x01\x0e\x56\x20\xb2\xb2\x38\x6a\x5b\xbb\xf1\xf5\xdd\x74\xf6\x79\x78\x3b\xda\xa3\xb5\xbb\x19\xfe\x3a\x1f\x9f\x01\x11\x15\x52\x9b\x53\x70\x74\x3b\xbc\xbe\xf9\x03\x7c\x4e\x56\x56\xda\x1d\xff\xd6\xf3\x5c\x5b\x1d\x92\x34\x3a\xc3\x6f\xec\xaa\xc3\x80\xd6\xee\x6f\xd1\x7b\x06\xec\xd9\x9e\x8d\x26\x63\xc6\xd8\xcf\x00\x00\x00\xff\xff\x95\xb4\x30\xf7\x8e\x02\x00\x00")

func tasks1VerifyShBytes() ([]byte, error) {
	return bindataRead(
		_tasks1VerifySh,
		"tasks/1/verify.sh",
	)
}

func tasks1VerifySh() (*asset, error) {
	bytes, err := tasks1VerifyShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/1/verify.sh", size: 654, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks2CoursedataSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\x52\x06\x01\x85\x82\xa2\xd4\x82\xc4\xa2\xcc\xbc\x74\x85\xb4\xfc\x22\x05\xef\x50\x27\xd7\x20\x3f\xd7\x10\xd7\x60\x05\x90\x2c\x17\x76\x55\x2e\xfe\xce\xde\xae\x41\x30\x15\x5c\x80\x00\x00\x00\xff\xff\xbd\xc2\x23\xfb\x56\x00\x00\x00")

func tasks2CoursedataShBytes() ([]byte, error) {
	return bindataRead(
		_tasks2CoursedataSh,
		"tasks/2/courseData.sh",
	)
}

func tasks2CoursedataSh() (*asset, error) {
	bytes, err := tasks2CoursedataShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/2/courseData.sh", size: 86, mode: os.FileMode(509), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks2ForegroundSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\x4a\xce\x49\x4d\x2c\xe2\xe2\x02\x04\x00\x00\xff\xff\x8a\x5c\xa8\xb1\x14\x00\x00\x00")

func tasks2ForegroundShBytes() ([]byte, error) {
	return bindataRead(
		_tasks2ForegroundSh,
		"tasks/2/foreground.sh",
	)
}

func tasks2ForegroundSh() (*asset, error) {
	bytes, err := tasks2ForegroundShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/2/foreground.sh", size: 20, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks2TaskMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8c\x31\x4e\xc5\x30\x10\x44\x7b\x9f\x62\xa5\xd4\xc1\x12\x65\x3a\x04\x0d\x1d\x42\x1c\x20\xc6\x19\xf8\xd6\x4f\xbc\x61\x77\x16\xae\x8f\xf2\x23\x44\xfb\x66\xde\x1b\xe4\xad\xf8\x55\xee\x53\x7a\xd4\xfe\xd1\x3e\xc3\x20\x35\xcc\xd0\x29\xe1\x30\xa1\x8a\xee\xb0\x42\xc8\x4f\xe3\x45\xae\xf1\x0e\xeb\x20\x5c\x1e\x5e\x9e\x4f\x36\x1f\xb0\x72\x9d\x53\x1a\x06\x79\xc5\x57\x34\xc3\x06\xfa\x94\xc6\x5b\x65\x92\xd9\x54\x79\xee\x4f\x5a\x63\x43\x67\x61\xd3\x7e\x3c\x2e\xe4\xee\x53\xce\xff\xe9\xbb\xa6\x79\xd1\xea\xd9\xc1\xd8\xf3\x6e\xba\x44\x3d\xee\x23\xfa\x77\x33\xed\x87\x9f\xa9\xba\xfa\xcd\x2a\xcb\x96\xab\xa1\x10\x63\x5d\xc3\x09\x1b\xff\x70\xfa\x0d\x00\x00\xff\xff\x19\xcd\x72\xdb\xe2\x00\x00\x00")

func tasks2TaskMdBytes() ([]byte, error) {
	return bindataRead(
		_tasks2TaskMd,
		"tasks/2/task.md",
	)
}

func tasks2TaskMd() (*asset, error) {
	bytes, err := tasks2TaskMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/2/task.md", size: 226, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks2VerifySh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x5f\x6b\x1b\x31\x10\xc4\xdf\xf5\x29\xa6\xaa\x31\x2d\x44\xa7\x38\x0f\xc5\x35\x49\xa8\x29\x67\x08\x4d\xea\x12\xfb\xa1\x50\x4a\xd8\xd3\xad\xed\x23\x3a\xe9\x38\xad\x9a\xa4\xb6\xbf\x7b\xb1\xd3\x7f\xe4\x6d\xe1\x37\x33\x3b\xbb\xaf\x5f\xd9\xaa\x09\xb6\xa2\xb4\x51\xea\x1b\xcc\x0a\xb6\x88\xf7\xf8\x8e\xe1\x10\xec\x36\x11\x75\x0c\x8c\xdd\x4e\xdd\xe7\x8a\x9d\x78\xac\x59\x10\x62\xcd\x09\x97\xb6\xe6\x1f\x36\x64\xef\x71\x76\x39\x1c\x01\xc3\xa1\xfa\xdf\x02\x7e\x6c\x04\xa7\x4a\x2d\xa7\x8b\x4f\x77\x8b\x8f\xf3\xdb\xf2\x42\x8f\xb4\x4a\x31\xf7\x8e\x61\x63\x27\xb6\xc8\x89\x7b\xe5\x48\x70\x7e\x8e\x72\x3e\xc3\x0e\x2e\xf7\x1e\x26\xc1\x7c\xc5\x97\xf9\x62\x09\x63\x6a\x12\xc2\x07\x83\x8d\x48\x97\x26\xd6\xa6\xf7\x6e\xd5\x3f\xb5\xb5\x8c\x0b\x7e\x64\x97\x85\x0d\x75\x4d\xc1\xd9\x3c\x70\x12\x33\x2a\xa8\xa5\x9f\x31\xd0\x43\x2a\x5c\x6c\x6d\xcd\x2b\xca\x5e\xac\xa7\xea\xce\xc7\xf5\x9a\xfb\x97\xd5\xd5\x56\x01\x5a\xa8\xf2\xac\x27\xd0\x87\x53\xfb\xc0\xc2\x49\x9f\x1c\x41\xd3\x72\x12\x6a\xbb\x03\x1c\xbc\xa9\x49\x18\xc6\x34\x29\x9a\xf1\xbb\xd3\xd1\x45\x48\x30\x26\x8b\x7b\xfb\xac\xee\xe8\xc9\x47\xaa\xf5\x04\x87\x54\x40\x07\x6a\x8f\xb1\x83\xed\xec\xea\x76\xb1\xfc\x3c\xbd\x29\xf7\x18\x6c\xaf\xa7\xbf\xe7\xa3\x0d\xd0\xdc\x52\xe3\x9f\x85\xe5\xcd\xf4\xea\xfa\x2f\x48\x8e\x03\xf5\x4d\x3c\x76\x1b\x27\xd3\x84\x46\x8a\x33\x7d\x82\x3f\x38\xf6\x87\x05\x83\xed\xbf\x47\xef\x15\xb0\x57\x7b\x55\xce\x67\x4a\xa9\x5f\x01\x00\x00\xff\xff\xd2\xdf\x48\x03\xe5\x01\x00\x00")

func tasks2VerifyShBytes() ([]byte, error) {
	return bindataRead(
		_tasks2VerifySh,
		"tasks/2/verify.sh",
	)
}

func tasks2VerifySh() (*asset, error) {
	bytes, err := tasks2VerifyShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/2/verify.sh", size: 485, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks3CoursedataSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\x52\x06\x01\x85\x82\xa2\xd4\x82\xc4\xa2\xcc\xbc\x74\x85\xb4\xfc\x22\x05\xef\x50\x27\xd7\x20\x3f\xd7\x10\xd7\x60\x05\x90\x2c\x17\x76\x55\x2e\xfe\xce\xde\xae\x41\x30\x15\x5c\x80\x00\x00\x00\xff\xff\xbd\xc2\x23\xfb\x56\x00\x00\x00")

func tasks3CoursedataShBytes() ([]byte, error) {
	return bindataRead(
		_tasks3CoursedataSh,
		"tasks/3/courseData.sh",
	)
}

func tasks3CoursedataSh() (*asset, error) {
	bytes, err := tasks3CoursedataShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/3/courseData.sh", size: 86, mode: os.FileMode(509), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks3ForegroundSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\x4a\xce\x49\x4d\x2c\xe2\xe2\x02\x04\x00\x00\xff\xff\x8a\x5c\xa8\xb1\x14\x00\x00\x00")

func tasks3ForegroundShBytes() ([]byte, error) {
	return bindataRead(
		_tasks3ForegroundSh,
		"tasks/3/foreground.sh",
	)
}

func tasks3ForegroundSh() (*asset, error) {
	bytes, err := tasks3ForegroundShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/3/foreground.sh", size: 20, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks3TaskMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcc\xb1\x6e\x86\x30\x0c\x04\xe0\x3d\x4f\x61\x89\x39\x78\xe8\xc6\x0a\x4b\x17\xda\x81\x07\x20\x10\x0b\xa2\x50\x27\x8a\x4d\xa3\xbe\x7d\x45\x96\x7f\xfb\xb7\xd3\xe9\xee\xeb\x60\x71\x12\xe1\xc3\x98\x89\xf2\x95\xfe\x60\xad\xe4\x7e\x69\x85\xef\xaf\x09\x66\xd2\x9a\x4a\x34\xa6\xeb\x60\x09\x59\x06\x63\x61\x3c\x69\x8f\xa0\xa7\x53\x18\xe7\x4f\xc8\xc9\x0b\xb8\x42\x50\x6e\xe6\xc0\x47\xdb\x4e\x69\xbf\x7f\x88\xd5\x69\x48\xfc\x9c\x4e\xd5\x2c\x03\x62\xad\xb5\x6f\x7e\xff\xb8\x82\xdb\x95\x0e\x6c\x85\x65\x52\x1b\xef\x8d\x0a\x93\x92\xd8\xc0\x4a\x47\x69\x00\xbe\x01\x7c\xda\x05\x99\x14\x2f\xa7\x24\x8a\x2f\xa1\x45\xeb\xbc\x7f\x80\xff\x00\x00\x00\xff\xff\x5c\x30\x8e\xfd\xe6\x00\x00\x00")

func tasks3TaskMdBytes() ([]byte, error) {
	return bindataRead(
		_tasks3TaskMd,
		"tasks/3/task.md",
	)
}

func tasks3TaskMd() (*asset, error) {
	bytes, err := tasks3TaskMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/3/task.md", size: 230, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks3VerifySh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\x51\x6b\x1b\x31\x10\x84\xdf\xf5\x2b\xa6\xaa\x31\x2d\x44\xa7\xb8\x85\xe2\x9a\x24\xd4\x14\x1b\x42\x93\xba\xd8\x7e\x28\x94\x12\x64\xdd\xfa\x2c\xa2\x93\x8e\xd3\x2a\x8e\x6b\xfb\xbf\x97\x73\x9a\x26\x6f\xd2\x7e\xb3\xb3\xb3\xfb\xf6\x8d\x5e\xb9\xa0\x57\x26\x6d\x84\xf8\x05\xb5\x86\x2e\xe2\x3d\x7e\xa3\xdf\x07\xd9\x4d\x44\x19\x03\xe1\x70\x10\xf7\x79\x45\x96\x3d\x2a\x62\x34\xb1\x4c\x50\x01\x5d\x4d\xa5\x5d\x62\xaa\x71\x40\xd5\x52\x83\x2d\x99\x07\x7a\xfe\xcc\x73\x08\x2e\x54\xb8\xd2\x25\x3d\xe8\x90\xbd\x07\xfa\x7d\xf1\xda\x17\xf4\xe8\x18\xe7\x42\x2c\xc7\x8b\x6f\x77\x8b\xaf\xb3\xf9\xe4\x52\x0e\xa4\x48\x31\xb7\x96\xa0\x63\xc3\xba\xc8\x89\x5a\x61\x0d\xe3\xe2\x02\x93\xd9\x14\x07\xd8\xdc\x7a\xa8\x04\xf5\x13\x3f\x66\x8b\x25\x94\x2a\x0d\x1b\x7c\x51\xd8\x30\x37\x69\xa4\x75\xfa\x6c\xd7\xed\xae\x2e\x79\x58\xd0\x23\xd9\xcc\xa4\x4c\xe3\x0a\xca\x6a\x4b\x89\xd5\xa0\x30\xb5\xf9\x13\x83\xd9\xa6\xc2\xc6\x5a\x97\xb4\x36\xd9\xb3\xf6\x66\x75\xe7\x63\x55\x51\xfb\x3a\xf5\x87\xab\xfe\x40\xec\x05\x20\xd9\xac\x3c\xc9\x11\x64\xb7\x7b\x1b\x88\x29\xc9\xb3\x13\x70\x35\x25\x36\x75\xd3\xc1\xde\xbb\xd2\x30\x41\x29\x97\xa2\x1a\x7e\x3a\x1f\x5c\x86\x04\xa5\x32\xdb\xf7\x4f\xea\xc6\xec\x7c\x34\xa5\x1c\xa1\x73\x05\x64\x30\xf5\xc9\xb6\xb7\x9f\x5e\xcf\x17\xcb\xef\xe3\xdb\xc9\x11\xbd\xfd\xcd\xf8\xdf\xfb\xd4\x06\x48\xaa\x8d\xf3\x4f\xc2\xc9\xed\xf8\xfa\xe6\x3f\x48\x96\x82\x69\x5d\x3c\x65\x1b\x26\xe5\x82\xe3\xe2\xa3\x3c\xc3\x33\x8e\x6d\x37\xa0\xb7\x7f\x39\xf4\x51\x00\x47\x71\x14\x93\xd9\x54\x08\xf1\x37\x00\x00\xff\xff\xb3\x4d\x27\xb3\x0a\x02\x00\x00")

func tasks3VerifyShBytes() ([]byte, error) {
	return bindataRead(
		_tasks3VerifySh,
		"tasks/3/verify.sh",
	)
}

func tasks3VerifySh() (*asset, error) {
	bytes, err := tasks3VerifyShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/3/verify.sh", size: 522, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks4CoursedataSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\x52\x06\x01\x85\x82\xa2\xd4\x82\xc4\xa2\xcc\xbc\x74\x85\xb4\xfc\x22\x05\xef\x50\x27\xd7\x20\x3f\xd7\x10\xd7\x60\x05\x90\x2c\x17\x76\x55\x2e\xfe\xce\xde\xae\x41\x30\x15\x5c\x80\x00\x00\x00\xff\xff\xbd\xc2\x23\xfb\x56\x00\x00\x00")

func tasks4CoursedataShBytes() ([]byte, error) {
	return bindataRead(
		_tasks4CoursedataSh,
		"tasks/4/courseData.sh",
	)
}

func tasks4CoursedataSh() (*asset, error) {
	bytes, err := tasks4CoursedataShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/4/courseData.sh", size: 86, mode: os.FileMode(509), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks4ForegroundSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\x4a\xce\x49\x4d\x2c\xe2\xe2\x02\x04\x00\x00\xff\xff\x8a\x5c\xa8\xb1\x14\x00\x00\x00")

func tasks4ForegroundShBytes() ([]byte, error) {
	return bindataRead(
		_tasks4ForegroundSh,
		"tasks/4/foreground.sh",
	)
}

func tasks4ForegroundSh() (*asset, error) {
	bytes, err := tasks4ForegroundShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/4/foreground.sh", size: 20, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks4TaskMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x41\x4b\xc3\x40\x10\x85\xef\xfb\x2b\x06\x7a\x2b\x6c\xb6\xb5\xb1\x6a\x2f\x22\xf4\xa2\xa7\x52\x2a\x5e\xb3\x49\xa6\xcd\x92\xcd\x4c\xd9\x99\x18\xfc\xf7\x92\x55\xd4\x93\xb7\xc7\xe3\xcd\xc7\x37\x0b\x38\x79\xe9\xa1\x34\xe6\x85\x03\x41\x45\xdc\xe2\x6a\x5d\x81\x32\x68\x87\xd0\xc4\x51\x14\x13\x18\xb3\x58\xc0\x29\x5c\x65\x67\x2c\x1c\x71\xc0\xa1\xc6\x04\xca\x3d\x12\x04\x81\xa5\xaf\x9b\x16\xcf\xc5\x6a\x7d\xb3\x29\x6f\xb7\x77\xf7\x0f\x5f\xc5\xf2\xd1\x58\xd8\xe3\xd9\x8f\x51\xe1\xe9\xf0\x0c\x07\x4e\x0a\x4c\x30\xf8\x8c\x9d\x4f\xb7\x65\xb9\x59\x1a\x0b\xaf\x82\x50\x89\x74\xf0\x47\xa1\x61\x22\x6c\x74\x8e\x3f\x66\x1d\x8b\x1a\x0b\x6f\x3e\x28\x68\x88\xf1\x7b\x0f\x3a\x26\x92\xbc\x3c\xa2\x6f\x3f\x2a\x10\xf5\x8a\x59\x7c\xcf\xcd\x38\x20\xa9\xd7\xc0\x34\x7f\xd0\xa9\x5e\x65\xe7\xdc\x34\x4d\xc5\x84\xfe\x1d\x8b\x89\x53\x2f\xae\x8e\x7c\x71\xb9\xb0\x84\x6a\xfb\xb1\xc6\x44\xa8\x28\x36\x90\xe2\x25\x65\x80\xfb\x07\xd0\x72\x23\x8e\x50\x5d\xf4\x8a\xa2\xee\x97\x90\xa3\xf5\x6d\x3b\x03\x3e\x03\x00\x00\xff\xff\x1d\x47\x90\x61\x76\x01\x00\x00")

func tasks4TaskMdBytes() ([]byte, error) {
	return bindataRead(
		_tasks4TaskMd,
		"tasks/4/task.md",
	)
}

func tasks4TaskMd() (*asset, error) {
	bytes, err := tasks4TaskMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/4/task.md", size: 374, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks4VerifySh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\x5f\x6b\x1b\x31\x10\xc4\xdf\xf5\x29\xa6\xaa\x39\x5a\x88\x4e\x71\x29\xc5\x35\x49\xa8\x29\x67\x08\x4d\xea\x12\xfb\xa1\x50\x4a\xd8\xd3\xad\x63\x11\x9d\x74\x9c\xa4\x26\xa9\x7d\xdf\xbd\xf8\xd2\x7f\x6f\xbb\xfb\x9b\x9d\x5d\xe6\xe5\x0b\x5d\x5b\xaf\x6b\x8a\x3b\x21\xbe\x41\x6d\xa1\xcb\x70\x8f\xef\x28\x0a\xb0\xd9\x05\x34\xc1\x33\x0e\x07\x31\x36\x28\x0a\xf1\xff\x14\xfc\x68\x13\x4e\x85\xd8\x2c\xd6\x9f\x6e\xd7\x1f\x57\x37\xd5\xb9\x9c\x4a\x11\x43\xee\x0d\x43\x87\x2e\xe9\x32\x47\xee\x85\xa1\x84\xb3\x33\x54\xab\x25\x0e\x30\xb9\x77\x50\x11\xea\x2b\xbe\xac\xd6\x1b\x28\xd5\x50\x22\x7c\x50\xd8\xa5\xd4\xc5\xb9\xd6\xf1\xbd\xd9\xf6\x4f\x6d\x93\x66\x25\x3f\xb2\xc9\x89\x15\x75\xb6\xe4\xac\x1e\x38\x26\x35\x2d\xa9\xa5\x9f\xc1\xd3\x43\x2c\x4d\x68\x75\xc3\x5b\xca\x2e\x69\x47\xf5\xad\x0b\x77\x77\xdc\xe3\x42\x37\xfc\x43\xfb\xec\x1c\xde\x5c\x14\x53\xb1\x17\x80\x4c\x54\x3b\x96\x73\xc8\xfb\x5c\x73\xef\x39\x71\x94\x27\x23\xb0\x2d\xc7\x44\x6d\x77\x84\x93\x57\x0d\x25\x86\x52\x36\x06\x35\x7b\x77\x3a\x3d\xf7\x11\x4a\xe5\x64\x5e\x3f\xab\x3b\x7a\x72\x81\x1a\x39\xc7\xd1\x15\x90\x9e\xda\xd1\x76\xb2\x5f\x5e\xde\xac\x37\x9f\x17\xd7\xd5\x80\xc9\xfe\x6a\xf1\xbb\x1e\xd7\x00\xc9\x2d\x59\xf7\x2c\xac\xae\x17\x97\x57\x7f\x41\x34\xec\xa9\xb7\x61\xfc\x6d\x16\x95\xf5\x36\x95\x6f\xe5\x09\xfe\xe0\xd0\x1f\x0f\x4c\xf6\xff\x82\x1e\x04\x30\x88\x41\x54\xab\xa5\x10\xe2\x57\x00\x00\x00\xff\xff\xfb\x97\xb2\x51\xc8\x01\x00\x00")

func tasks4VerifyShBytes() ([]byte, error) {
	return bindataRead(
		_tasks4VerifySh,
		"tasks/4/verify.sh",
	)
}

func tasks4VerifySh() (*asset, error) {
	bytes, err := tasks4VerifyShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/4/verify.sh", size: 456, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks5CoursedataSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\x52\x06\x01\x85\x82\xa2\xd4\x82\xc4\xa2\xcc\xbc\x74\x85\xb4\xfc\x22\x05\xef\x50\x27\xd7\x20\x3f\xd7\x10\xd7\x60\x05\x90\x2c\x17\x76\x55\x2e\xfe\xce\xde\xae\x41\x30\x15\x5c\x80\x00\x00\x00\xff\xff\xbd\xc2\x23\xfb\x56\x00\x00\x00")

func tasks5CoursedataShBytes() ([]byte, error) {
	return bindataRead(
		_tasks5CoursedataSh,
		"tasks/5/courseData.sh",
	)
}

func tasks5CoursedataSh() (*asset, error) {
	bytes, err := tasks5CoursedataShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/5/courseData.sh", size: 86, mode: os.FileMode(509), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks5ForegroundSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\xe2\x02\x04\x00\x00\xff\xff\x30\x98\x82\x7d\x0e\x00\x00\x00")

func tasks5ForegroundShBytes() ([]byte, error) {
	return bindataRead(
		_tasks5ForegroundSh,
		"tasks/5/foreground.sh",
	)
}

func tasks5ForegroundSh() (*asset, error) {
	bytes, err := tasks5ForegroundShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/5/foreground.sh", size: 14, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks5TaskMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x4d\x6b\x02\x31\x10\x86\xef\xf9\x15\x03\x7b\x13\x76\xa3\x68\x7b\x10\x11\x84\x4a\x29\x58\x05\xdd\x16\x7a\xdb\x98\x0c\xba\xdd\x7c\x2c\x99\xa4\xed\xfe\xfb\x92\x6c\x3f\x73\x49\xc8\x3c\x99\xe7\x9d\x14\x50\x0b\xea\xe0\x86\xb1\x9d\x38\xa3\x86\x89\x75\x0a\xa7\xb3\x09\x08\x82\xe6\xdd\xf9\x0e\x7d\xc3\x58\xd3\x34\xac\x8b\x67\x94\x41\xc3\x05\x03\x24\x88\xd8\x7e\xf3\xb8\x85\xb4\x4e\xf5\xa6\x7e\x3a\x01\xc0\xf1\xb0\xdb\xa6\x1d\x36\xf7\x63\xe5\x79\x7b\x3c\x3d\x1c\xf6\xcc\x08\x0a\xe8\x13\x81\x42\x0d\xa9\xf2\x73\x33\x37\x8b\x39\x01\xc0\xdb\xac\x9a\x2d\xaa\x29\x1b\x03\xfc\x45\xc7\x18\x00\xb0\xb8\xa5\xdc\xf5\x1b\x4d\xb1\x18\x2b\x0a\xa8\xdb\x9e\x96\xac\x84\x17\x17\x81\xae\x2e\x6a\x05\xaf\x91\x02\xe8\x3c\x93\x45\x89\x44\xc2\x0f\x39\x77\x9e\x2c\x1d\x4a\xef\x34\x56\x69\x2c\x6f\x31\x20\x55\xad\xe3\xab\xd5\xc8\xa4\x12\xac\xd7\x4d\xee\x7e\xe7\x64\x34\x68\x83\x08\xad\xb3\x49\x73\x0d\xa1\x5f\x72\xfe\xfb\xf4\x3c\xe0\x87\x30\xbd\xc6\x4a\x3a\xc3\xb3\x95\xf8\x17\x48\xff\xc8\x24\x51\x4e\x12\x97\xce\x4a\xec\x03\x71\xa9\x63\xfa\x89\x52\x28\xd3\xda\x96\x82\xcf\x1a\x6e\x84\x15\x17\x2c\x15\xf6\xda\x0d\xc9\xce\x8b\xd8\x2b\x11\x5a\x7b\x29\x47\x01\xfb\x0c\x00\x00\xff\xff\x1b\x0f\xcf\x9a\xbc\x01\x00\x00")

func tasks5TaskMdBytes() ([]byte, error) {
	return bindataRead(
		_tasks5TaskMd,
		"tasks/5/task.md",
	)
}

func tasks5TaskMd() (*asset, error) {
	bytes, err := tasks5TaskMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/5/task.md", size: 444, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks5VerifySh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\x6f\x6b\x13\x31\x1c\xc7\x9f\xe7\x55\x7c\x8d\xe5\xa6\xb0\x5c\x76\x82\x52\xcb\x3a\x2c\x72\x85\xe1\x66\x65\xed\x03\x41\x64\xe4\x72\xbf\xb6\xa1\xb9\xe4\x48\x72\x76\xb3\xed\x7b\x97\xbb\xa9\xdb\x93\x10\xf8\x7c\xff\x25\xaf\x5f\xc9\xca\x38\x59\xa9\xb8\x65\xec\x07\xc4\x1a\x32\xf7\x3b\xfc\x44\x96\x81\xf4\xd6\xa3\xf6\x8e\x70\x3c\xb2\x5d\x57\x91\x4e\x16\x1b\x4a\x70\xbe\xa6\xe1\xb8\x28\x20\x44\xdc\xfa\xbd\xb0\xaa\x22\x1b\x71\xc4\x26\x50\x8b\xb3\x1e\x8a\xe0\x2d\xe5\xbd\x2f\x38\x4a\x14\x73\xe3\xe5\xde\x87\x1d\x85\xe9\x19\xae\x64\x4d\xbf\xa4\xeb\xac\x05\xb2\x8c\xbd\xac\x02\x3d\x98\x84\x0b\xc6\x56\xb3\xe5\x97\xfb\xe5\xe7\xc5\x5d\x39\xe5\x05\x67\xd1\x77\x41\x13\xa4\x6f\x93\xcc\xbb\x48\x81\x69\x95\x70\x79\x89\x72\x31\xc7\x11\xba\x0b\x16\x22\x42\x7c\xc7\xb7\xc5\x72\x05\x21\x6a\x95\x14\x3e\x09\x6c\x53\x6a\xe3\x44\xca\xf8\x51\xaf\xc3\x63\x53\xa7\x71\x4e\x0f\xa4\xbb\x44\x42\xb5\x26\xa7\x4e\xec\x29\x26\x51\xe4\xaa\x51\xbf\xbd\x53\xfb\x98\x6b\xdf\xc8\x9a\xd6\xaa\xb3\x49\x5a\x55\xdd\x5b\xbf\xd9\x50\x78\xb9\xfa\xdd\x55\x56\xb0\x03\x03\x78\x52\x95\x25\x3e\x01\x7f\x7e\x2a\x3f\x1f\x80\x69\x28\x26\xd5\xb4\x3d\x1c\xbd\xa9\x55\x22\x08\x61\xa2\x17\xe3\x0f\x17\xc5\xd4\x45\x08\xd1\x25\xfd\xf6\x49\xdd\xaa\x47\xeb\x55\xcd\x27\xe8\x53\x01\xee\x54\x33\xc4\x8e\x0e\xf3\xeb\xbb\xe5\xea\xeb\xec\xb6\x3c\x61\x74\xb8\x99\xfd\xbd\x0f\x36\x80\x53\xa3\x8c\x7d\x12\x96\xb7\xb3\xeb\x9b\xff\x20\x6a\x72\x2a\x18\x3f\x6c\x1b\x47\x61\x9c\x49\xf9\x7b\x7e\x8e\x7f\xd8\x87\xbe\x60\x74\x78\xfe\xe8\x13\x03\x4e\xec\xc4\xca\xc5\x9c\x31\xf6\x27\x00\x00\xff\xff\xa0\xd2\x84\x59\x1d\x02\x00\x00")

func tasks5VerifyShBytes() ([]byte, error) {
	return bindataRead(
		_tasks5VerifySh,
		"tasks/5/verify.sh",
	)
}

func tasks5VerifySh() (*asset, error) {
	bytes, err := tasks5VerifyShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/5/verify.sh", size: 541, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks6CoursedataSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\x52\x06\x01\x85\x82\xa2\xd4\x82\xc4\xa2\xcc\xbc\x74\x85\xb4\xfc\x22\x05\xef\x50\x27\xd7\x20\x3f\xd7\x10\xd7\x60\x05\x90\x2c\x17\x76\x55\x2e\xfe\xce\xde\xae\x41\x30\x15\x5c\x80\x00\x00\x00\xff\xff\xbd\xc2\x23\xfb\x56\x00\x00\x00")

func tasks6CoursedataShBytes() ([]byte, error) {
	return bindataRead(
		_tasks6CoursedataSh,
		"tasks/6/courseData.sh",
	)
}

func tasks6CoursedataSh() (*asset, error) {
	bytes, err := tasks6CoursedataShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/6/courseData.sh", size: 86, mode: os.FileMode(509), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks6ForegroundSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\xe2\x02\x04\x00\x00\xff\xff\x30\x98\x82\x7d\x0e\x00\x00\x00")

func tasks6ForegroundShBytes() ([]byte, error) {
	return bindataRead(
		_tasks6ForegroundSh,
		"tasks/6/foreground.sh",
	)
}

func tasks6ForegroundSh() (*asset, error) {
	bytes, err := tasks6ForegroundShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/6/foreground.sh", size: 14, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks6TaskMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x4f\xdc\x30\x10\xbd\xfb\x57\x8c\x96\x95\x02\x95\x9c\xb0\x52\x85\xaa\x48\x7b\xa0\xb0\xe2\x50\x51\x21\xa0\xbd\x54\x6d\xe3\xd8\xc3\xc6\x24\xb1\x2d\xcf\x64\x17\x0a\xfc\xf7\x2a\x59\xb2\x5a\xfa\x81\x5a\xf9\x36\xe3\x79\xef\xcd\xcc\x9b\x3d\xb8\x56\x54\xc3\x91\x10\xa7\x18\x1a\x7f\x0f\xa7\x8a\xaa\xd2\xab\x68\xe0\x5c\x39\x7b\x83\xc4\x70\x13\x7d\x0b\x5f\x2a\x8c\xf8\x75\xbf\x62\x0e\x94\x67\x59\x54\xeb\x74\x69\xb9\xea\xca\x8e\x30\x6a\xef\x18\x1d\xa7\xda\xb7\x59\xdd\x95\x18\x1d\x32\x52\x66\x46\xac\x6c\x35\x4b\x67\x87\xe9\x2c\xa3\xa8\x33\x33\x10\x65\x11\xb5\x6f\x5b\x74\x06\xcd\x4e\x8d\xdc\xd6\xa4\xf7\xaa\x6d\x0e\x84\xd8\xdb\x83\x93\x88\x8a\x11\x8e\x4d\x6b\x1d\x7c\x22\x8c\x42\x14\x45\xd1\xe7\x85\x0a\xf6\x33\x46\xb2\xde\xe5\xb0\x9a\x89\xda\x3a\x93\xc3\x15\xc6\x95\xd5\x78\xac\xb5\xef\x1c\x8b\x16\x59\x19\xc5\x2a\x17\x00\x4e\xb5\x98\x83\xea\x91\x64\xaf\xfc\x39\x44\x41\x69\xcc\xa1\xd7\x21\xe9\x9e\x18\x5b\x21\xa5\x7c\x81\x1e\x4b\xa5\x53\xd5\x71\xe5\xa3\xfd\xa1\xd8\x7a\x97\xd6\xef\x28\xb5\x3e\x5b\xcd\x4a\x64\x35\x92\x9f\x34\x1d\x31\xc6\x4b\xdf\xe0\x7b\xeb\x8c\x75\xcb\xd7\x05\x44\xdf\xe0\x25\xde\xf4\x39\x15\xec\x59\xf4\x5d\x78\x85\x4c\x00\xfc\x46\xb3\x45\xd5\x9b\x98\x1c\xd0\x05\x75\xe5\x2d\x6a\xa6\x5c\x48\xf8\xe3\x5c\xfe\x67\x1a\x45\x51\x0c\xab\x38\x43\x7e\xde\xc3\x15\xea\x88\x3c\x6c\x42\x5c\x2d\x4e\x2e\x17\xd7\xdf\x3f\x1e\x9f\x2f\xe6\x93\xe9\x7e\x5f\xa8\xb9\x01\xe9\x76\x31\x60\x89\x0c\x34\x54\xc1\x23\x2c\x23\x86\x1d\x66\x78\x04\xb5\xae\x21\x79\x08\xd1\x3a\x86\xe9\xec\x29\x39\x98\x88\x11\x68\xa7\xf2\x17\xcc\xe9\xc3\x0e\xf7\x13\x48\x0f\xb7\xe4\x5d\x50\x5c\xcd\x93\x87\xb4\x1f\x7a\xca\xbe\x46\xf7\x94\xc0\x23\x94\x8a\xf0\xe8\x2d\x48\xb3\x6d\xe7\x22\xfa\xbb\x1d\xcf\x0b\xb1\xb8\x0b\x9e\x70\x88\xf8\x68\x36\xd6\xb7\x8e\xac\xc1\x71\xba\xb0\xb6\x5c\x41\x31\x4a\x0b\x3d\x42\x01\xbd\x97\x95\x33\xf9\x66\x1e\x2f\x92\x20\xa5\x32\x26\x22\xd1\x3c\x39\x4c\x87\x97\xf4\x31\xad\x31\xb0\xac\x3c\x31\xcd\x93\x6f\x6f\xa6\xc9\x56\xd5\xe2\x2e\x34\x3e\x22\x7c\xd8\x9e\xc5\xb8\x6e\xf0\x0e\x26\x5b\xb9\x13\xb8\x56\xa5\x10\x17\x0d\x2a\x42\xe8\x08\x61\xe8\x15\x7a\xe3\xa0\x63\xab\x07\xe7\x6c\x9a\x08\x11\x57\xd6\x77\x04\xc4\x18\x06\x96\x53\xaf\xbb\x16\x1d\x0f\x9f\x7a\x93\x8c\xb7\xbd\xb9\xeb\xbf\x1e\xf3\xbf\xff\xcc\xd6\xb6\xb6\xd9\x70\xbd\xd6\x2d\x25\xa9\x36\x34\xb8\x31\xda\xcf\x00\x00\x00\xff\xff\x51\x73\x08\x1b\x78\x04\x00\x00")

func tasks6TaskMdBytes() ([]byte, error) {
	return bindataRead(
		_tasks6TaskMd,
		"tasks/6/task.md",
	)
}

func tasks6TaskMd() (*asset, error) {
	bytes, err := tasks6TaskMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/6/task.md", size: 1144, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks6VerifySh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x4f\x1b\x4d\x0c\x86\xef\xf3\x2b\xfc\xcd\x87\x48\x5b\x31\xbb\x49\x8b\x50\x8a\x08\x6a\x54\x05\x09\x15\x08\x22\x1c\x2a\x45\x11\x78\x67\x4c\xb2\x65\x77\x66\x35\xf6\x02\x69\x92\xff\x5e\xed\xa6\xb4\xa8\xe2\xd2\xde\x6c\xbd\xb6\x9f\xd7\xe3\xf9\xff\xbf\x34\xcb\x7d\x9a\x21\x2f\x94\x9a\x82\xb9\x83\x34\x09\xf7\x30\x83\xdd\x5d\x20\xbb\x08\xe0\x82\x27\x58\xaf\xd5\x14\x6e\xef\xeb\x8c\xac\x14\x30\x27\x01\x47\x55\x11\x96\x25\x79\x01\xe3\xa1\x51\x0c\x2f\x59\xa8\x6c\xe3\xe8\x49\x88\x8d\x43\x5e\x64\x01\xa3\x03\x13\xe0\x1b\x07\x5f\xa1\x2c\x06\x9d\x55\xc2\x15\xd9\x44\xa8\xac\x0a\x14\xda\x66\x36\x78\xc1\xdc\x53\xe4\x69\x77\x96\x78\x2c\x69\xd3\xb9\x85\xc1\x00\xf4\x6b\x03\x75\xeb\xf0\x4f\x53\xfc\x60\xff\xd9\x4d\x15\xa2\xb4\x68\xc1\x38\x27\xb9\x0c\x51\x9e\x0d\xf4\xf7\xf7\x3f\xbc\x0e\xa4\xea\xaf\x79\x7a\x95\x70\x9d\x31\x09\x4f\xdf\xcd\x12\x74\x2e\x12\x33\x6d\x97\x0e\x8e\x2e\x9a\xc5\x75\xcb\xed\x34\x79\xb7\xd7\x81\x19\x34\xe8\x97\xd7\x00\x7a\xca\x05\xba\x4a\x5d\x0f\x27\x5f\x6e\x26\x9f\xc7\x57\xa3\x81\xee\x69\xc5\xa1\x8e\x96\x20\x0d\x95\xa4\x49\xcd\x14\x95\x45\x81\xa3\x23\x18\x8d\x4f\x60\x0d\xb6\x8e\x05\x18\x06\xf3\x15\x2e\xc7\x93\x6b\x30\xc6\xa1\x20\x7c\x32\xb0\x10\xa9\xf8\x30\x4d\xf9\xa3\xbd\x8b\xcb\xd2\x49\x3f\xa1\x27\xb2\xb5\x90\xc1\x2a\x4f\xa8\x36\x8f\xc4\x62\x7a\x09\x96\xf8\x3d\x78\x7c\xe4\xc4\x86\x32\x75\x74\x87\x75\x21\x69\x81\xd9\x4d\x11\xe6\x73\x8a\x70\x9c\x3a\x7a\x48\x7d\x5d\x14\xf0\xfe\x78\xb7\xa7\x56\x0a\x40\x0b\x66\x05\xe9\xc3\x97\xb7\xd4\x7b\xad\x90\x97\xc4\x82\x65\xd5\x88\x3b\x6f\x1c\x0a\x81\x31\x39\x07\xd3\x3f\xe8\xf6\x06\x9e\xc1\x98\x5a\xec\xdb\x6d\x75\x85\xcb\x22\xa0\xd3\x87\xd0\x4c\x05\xd0\xcd\x37\x69\x3b\x57\x27\xa7\x57\x93\xeb\x8b\xe1\xf9\x68\x03\x3b\xab\xb3\xe1\xcf\xb8\x6d\x03\xd0\x54\x62\x5e\x6c\x0b\x47\xe7\xc3\xd3\xb3\x5f\x02\x5b\xf2\x18\xf3\xd0\x7a\xeb\xb3\xc9\x7d\x2e\xc9\x81\xde\x83\x67\x39\xc4\x06\xb0\xb3\xfa\xfd\xd0\x1b\x05\xb0\x51\x1b\x35\x1a\x9f\x28\xa5\x7e\x04\x00\x00\xff\xff\x16\xea\x30\x84\x40\x03\x00\x00")

func tasks6VerifyShBytes() ([]byte, error) {
	return bindataRead(
		_tasks6VerifySh,
		"tasks/6/verify.sh",
	)
}

func tasks6VerifySh() (*asset, error) {
	bytes, err := tasks6VerifyShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/6/verify.sh", size: 832, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks7CoursedataSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\x52\x06\x01\x85\x82\xa2\xd4\x82\xc4\xa2\xcc\xbc\x74\x85\xb4\xfc\x22\x05\xef\x50\x27\xd7\x20\x3f\xd7\x10\xd7\x60\x05\x90\x2c\x17\x76\x55\x2e\xfe\xce\xde\xae\x41\x30\x15\x5c\x80\x00\x00\x00\xff\xff\xbd\xc2\x23\xfb\x56\x00\x00\x00")

func tasks7CoursedataShBytes() ([]byte, error) {
	return bindataRead(
		_tasks7CoursedataSh,
		"tasks/7/courseData.sh",
	)
}

func tasks7CoursedataSh() (*asset, error) {
	bytes, err := tasks7CoursedataShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/7/courseData.sh", size: 86, mode: os.FileMode(509), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks7ForegroundSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\xe2\x02\x04\x00\x00\xff\xff\x30\x98\x82\x7d\x0e\x00\x00\x00")

func tasks7ForegroundShBytes() ([]byte, error) {
	return bindataRead(
		_tasks7ForegroundSh,
		"tasks/7/foreground.sh",
	)
}

func tasks7ForegroundSh() (*asset, error) {
	bytes, err := tasks7ForegroundShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/7/foreground.sh", size: 14, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks7TaskMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xbf\xaf\xd4\x30\x0c\xc7\xf7\xfe\x15\x96\x6e\x81\x21\x8d\x98\x40\x6f\x7d\x6f\x65\x01\x36\x84\x54\x37\xf1\xb5\x51\x13\x3b\x8a\x9d\x3b\xfa\xdf\xa3\xf6\x84\x40\x27\x21\xb1\xc6\xf1\xc7\xdf\x1f\x17\xf8\x86\xba\xc1\xc7\x61\x78\xa3\x9a\x65\x87\xcf\x64\x2d\x05\x85\xaf\xd4\x6e\xd4\xe0\xda\xa4\xc0\xf7\x95\x1a\xfd\x78\xb7\x9a\x55\x7d\xf1\xbe\xe1\x7d\x5c\x92\xad\x7d\xee\x4a\x2d\x08\x1b\xb1\x8d\x41\x8a\xdf\xfa\x4c\x8d\xc9\x48\xfd\x26\x55\x7d\x41\x35\x6a\x1e\x63\x14\x56\x5f\x1e\x68\xa7\x27\xda\xdf\x3e\x8c\x9f\xc6\x9f\xe3\x8e\x25\xbf\x1f\x86\xcb\x05\x5e\x57\x0a\x1b\xd8\x8a\xf6\x32\xb8\x67\x21\x49\x21\x9e\x0a\x29\x82\xf6\x10\x48\xf5\xda\x73\xde\x01\x39\x1e\xc3\xe9\x4b\x67\x4e\xbc\x4c\x83\x83\x57\x29\xe5\x78\x9e\x0e\x3d\xc1\x32\x98\x54\x60\x89\xa4\x13\xe8\x2a\x77\x85\x4a\xed\x2a\xad\x20\x07\x02\x35\xb4\xa4\x76\xdc\x9a\xf7\xc7\xb7\x7f\x31\xaa\x44\x05\xe7\x30\x67\xc7\x58\x48\x2b\x86\xff\x61\x1e\x6b\xa7\xc3\x37\x09\xbd\x10\x1f\x43\xe1\xc3\xe4\xef\x48\xff\x04\x37\x26\xf1\x51\x82\x7a\x43\xdd\xd4\x47\x9a\xfb\xe2\xb0\xd6\x9c\xc2\xb9\xe5\x42\xee\x67\xa8\x8d\x54\x7a\x0b\xe4\xba\xe2\x42\xae\x08\x27\x93\x96\x78\xf1\x7f\x71\x1f\x35\x3d\x75\xe3\x12\x87\x3e\xa3\x49\x7b\xaa\x64\xf8\x15\x00\x00\xff\xff\x3f\x7b\x4b\xd3\x0e\x02\x00\x00")

func tasks7TaskMdBytes() ([]byte, error) {
	return bindataRead(
		_tasks7TaskMd,
		"tasks/7/task.md",
	)
}

func tasks7TaskMd() (*asset, error) {
	bytes, err := tasks7TaskMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/7/task.md", size: 526, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tasks7VerifySh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x4f\x6f\xda\x40\x10\xc5\xef\xfb\x29\x5e\xb7\x16\x24\x52\xd6\x0e\x3d\xb4\x14\x85\xa8\xa8\x02\x29\x6a\x52\x2a\xe0\x50\x29\x8a\x92\xc5\x1e\x60\x8b\xbd\x6b\x79\xc6\x25\xd4\xf8\xbb\x57\x90\xfe\xbb\xf5\x36\x9a\xdf\x9b\x37\x4f\xef\xf5\xab\x64\xe9\x7c\xb2\xb4\xbc\x51\xea\x1e\x66\x85\x24\x0e\x5b\x3c\xa0\xd3\x01\xa5\x9b\x80\x2c\x78\xc2\xe1\xa0\xee\xf1\xb4\xad\x97\x94\x4a\x8e\x35\x09\xca\x90\x31\x8c\xc7\x71\x67\x78\xcf\x42\x05\xa2\xb3\xff\x29\x0e\x58\x57\x54\xa2\x20\xa9\x5c\xca\x38\xc0\xee\xb6\xe8\x36\x65\xe5\xbc\x20\xea\xb5\xdd\x73\x98\x80\x6f\x1c\x7c\x69\x65\x33\xec\x36\x31\x8b\x95\x9a\xe3\x72\x63\x99\xda\xee\x13\x86\x43\xe8\x59\xed\xbd\xf3\x6b\x8d\x07\xa0\xd3\x51\xff\xc6\x04\x3d\x3b\xc1\xa5\x52\x8b\xd1\xfc\xd3\xe3\xfc\xe3\x74\x36\x1e\xea\x9e\x56\x1c\xea\x2a\x25\x24\xa1\x94\x24\xae\x99\x2a\x95\x5a\xc1\xd5\x15\xc6\xd3\x09\x0e\x48\xeb\x2a\x87\x61\x98\xaf\xf8\x32\x9d\x2f\x60\x4c\x66\xc5\xe2\x83\xc1\x46\xa4\xe4\x41\x92\xf0\xfb\x74\x55\xed\x8b\x4c\xfa\x31\x3d\x53\x5a\x0b\x19\x5b\xba\x98\x6a\xb3\x23\x16\xd3\x8b\x6d\x61\x7f\x04\x6f\x77\x1c\xa7\xa1\x48\x32\x5a\xd9\x3a\x97\x24\xb7\xcb\xc7\x3c\xac\xd7\x54\xe1\x3a\xc9\xe8\x7b\xe2\xeb\x3c\xc7\x9b\xeb\x4e\x4f\x35\x0a\xd0\x62\x97\x39\xe9\x01\xf4\xb1\xa5\xca\x93\x10\xeb\x8b\x13\x70\x05\xb1\xd8\xa2\x3c\xc2\xe8\x2c\xb3\x42\x30\xc6\x71\x30\xfd\xb7\x97\xbd\xa1\x67\x18\x53\x4b\x7a\xfe\xa2\x2e\xed\x3e\x0f\x36\xd3\x03\x1c\x5d\x01\xed\x6d\x71\xb2\x8d\x9a\xc9\xcd\x6c\xbe\xf8\x3c\xba\x1b\xb7\x88\x9a\xdb\xd1\xaf\xf9\x74\x06\x68\x2a\xac\xcb\x5f\x84\xe3\xbb\xd1\xcd\xed\x1f\xc0\x29\x79\x5b\xb9\x70\xca\xd6\x67\xe3\xbc\x93\xf8\x9d\xbe\xc0\x6f\x1c\xaa\xe3\x83\xa8\xf9\x5b\x74\xab\x80\x56\xb5\x6a\x3c\x9d\x28\xa5\x7e\x06\x00\x00\xff\xff\x62\x92\x4c\xe2\x59\x02\x00\x00")

func tasks7VerifyShBytes() ([]byte, error) {
	return bindataRead(
		_tasks7VerifySh,
		"tasks/7/verify.sh",
	)
}

func tasks7VerifySh() (*asset, error) {
	bytes, err := tasks7VerifyShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tasks/7/verify.sh", size: 601, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webserverIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x6d\x8b\x1b\x37\x10\xfe\x7e\xbf\x62\xa2\x50\xd2\x42\xe5\xf5\x99\x6b\x13\xf6\x76\xcd\x25\x21\x85\x52\xc8\x97\xa6\x90\x6f\x87\x56\x1a\x7b\x15\xeb\x65\x2b\x8d\xed\x75\xc2\xfd\xf7\xa2\x7d\xf3\xfa\x7a\x0d\x94\xd0\x62\x8c\x34\x33\xda\x67\xe6\x99\x17\xed\x16\xcf\x94\x97\x74\x6a\x10\x6a\xb2\x66\x7d\x55\xa4\x05\x8c\x70\xdb\x92\xb1\xf5\x15\x40\x51\xa3\x50\x69\x03\x50\x58\x24\x01\xb2\x16\x21\x22\x95\x6c\x4f\x1b\xfe\x8a\xcd\x4d\x35\x51\xc3\xf1\xcf\xbd\x3e\x94\xec\x23\xff\xe3\x35\x7f\xeb\x6d\x23\x48\x57\x06\x19\x48\xef\x08\x1d\x95\xec\xd7\x77\x25\xaa\x2d\x5e\x3c\xe9\x84\xc5\x92\x1d\x34\x1e\x1b\x1f\x68\x76\xf8\xa8\x15\xd5\xa5\xc2\x83\x96\xc8\x3b\xe1\x47\xd0\x4e\x93\x16\x86\x47\x29\x0c\x96\xd7\x8b\xe5\x08\x15\x65\xd0\x0d\x41\x0c\xb2\x64\x29\x96\x98\x67\x99\x54\x6e\xf1\x29\x2a\x34\xfa\x10\x16\x0e\x29\x73\x8d\xcd\xee\x8e\x58\x49\x6f\x1b\xef\xd0\x51\xcc\x2e\xa4\x4f\xf1\x6e\x75\xa9\xe1\xc6\x0b\x85\x61\x61\x75\x82\x62\xeb\x22\xeb\x1d\x5d\x7a\x4d\x49\x2c\x99\xf5\x6a\x9f\xd8\x7e\x3d\x86\x6d\x9d\x7d\xc6\xe0\x15\x1e\xda\x6e\xc3\xad\xba\xbb\xce\x62\x90\xa3\xf4\x84\xaf\xce\x19\x14\x91\x4e\x06\x7b\xcf\x00\xcf\xad\x08\x3b\xf8\x32\x48\x00\x4a\xc7\xc6\x88\x53\x0e\xda\x19\xed\x90\x57\xc6\xcb\xdd\xed\x64\x4e\x59\x15\xda\xe5\xe0\xbc\xc3\x51\xfd\x30\xac\xa9\xce\x18\xe0\x0b\x4c\xc7\x37\xde\x11\xdf\x08\xab\xcd\x29\x87\x28\x5c\xe4\x11\x83\xde\xdc\x3e\x3a\x11\xf5\x67\xcc\x61\xf5\xaa\x69\x67\x16\xc2\x96\xb8\x30\x7a\xeb\x72\x90\xe8\x08\xc3\xcc\xd8\xf8\xa8\x49\x7b\x97\xc3\x46\xb7\xa8\x66\x96\xae\xc2\x39\x5c\x2f\x97\xdf\xcd\xb4\x1d\x97\x1a\xf5\xb6\xa6\x1c\x6e\x56\x97\x8e\x7c\x93\xc3\xf2\x16\x0c\x6e\xa8\xdb\x4c\x96\x4a\xc8\xdd\x36\xf8\xbd\x53\x5c\x7a\xe3\x43\x0e\xcf\x6f\x56\xe9\x37\x4f\x48\xa7\x3f\xd6\x9a\xce\xf9\x18\x11\x2a\xaf\x4e\xf3\x74\x54\xbe\x4d\x5c\xb5\xdb\xe6\x50\xf9\xa0\x30\xf0\xca\xcf\x43\xb1\xda\xf1\x33\x81\x8b\x28\xad\x08\xdb\x94\xf8\xeb\x65\xd3\x82\xd8\x93\x87\x65\xb7\xcc\x93\x22\x94\xea\xb0\x6f\x7e\x9a\x3d\x3a\x56\xe7\xce\xa2\xd2\x02\xbe\xb7\xa2\x1d\x7d\xbc\xfc\xf9\x65\xd3\xfe\x30\xab\xfe\x54\xc1\x59\x59\xae\x3b\xb0\x87\x19\x89\x8e\xd4\xe4\xec\xd2\xfe\xd0\x77\x59\x91\x0d\x5d\xd6\x4b\x46\xbb\x1d\x04\x34\x25\xeb\xd4\xb1\x46\x24\x06\x75\xc0\xcd\xb9\xc5\x2b\xef\x29\x1e\x05\xc9\x7a\x21\xbd\xcd\x6e\x32\xab\x1d\x9d\x7a\x35\x05\xd1\x2c\x64\x8c\xe3\x98\x7e\x03\xde\xfd\x41\x04\x2d\x2a\x83\x71\x11\x7b\xc4\x74\x45\x65\xe3\x1d\x55\x24\x7a\x83\x97\x61\x92\x40\xab\x92\xa5\x31\x19\x66\x32\xbb\x57\x82\x44\x1a\xac\xe1\xc0\xc8\xb2\x0a\xeb\xf4\xef\x85\x67\x9c\x43\xb1\xf1\xc1\x82\x90\xa9\x53\x4b\x96\x31\xb0\x48\xb5\x57\x25\x6b\x7c\x24\x36\x8e\xe0\x90\xb0\x74\x76\x0d\x9c\x8f\x68\x4a\x1f\x40\x1a\x11\x63\xc9\x2a\x72\x9c\xbc\x37\x95\x08\x0c\x82\x37\x58\xb2\x49\x4c\x6c\xb8\x11\x55\x4a\xc6\x87\x5e\x09\x47\x4d\x35\x54\x7b\x22\xef\x20\xf5\x6f\x13\x27\x67\x8f\x61\x3b\x33\xd8\xc0\x57\x23\x72\xa7\xb9\xc4\xfd\x45\x87\x48\x3d\xd2\x04\x94\xf8\xf6\x1e\xce\x68\x90\x10\x9b\xa0\xad\x08\x27\x06\x5d\x69\x4a\xf6\xc4\x1c\x33\xf0\x4e\x1a\x2d\x77\xe9\x76\x76\xca\x1f\x17\xc6\x4b\x91\xb2\xb4\x48\x35\x84\x12\x5e\x64\xf7\x69\xf8\x5e\xdc\xb2\x35\x14\x05\x87\x37\x42\xee\xa0\xc8\x7a\x8f\x13\x97\x4c\xe9\xc3\x37\x11\xfb\x1d\xa5\x77\xea\xff\x66\xe6\xb0\xa5\x8e\xd9\x7b\x6c\x09\xf8\x7a\xfd\x35\x66\xf3\xed\x13\x3d\xd5\xa5\xe9\x1f\x1a\x6b\xa4\xd1\xbf\x57\xe2\xbe\xb2\x3a\xbd\x18\xff\x3d\xa9\x54\x03\x78\xf3\xfa\xed\x6f\x8f\x02\x1d\x9a\xf6\xea\xdc\xc5\x8f\x82\x4b\x4c\xff\xfb\xe0\xde\xbf\xfb\xf8\x01\xfe\x96\xc5\x29\xb8\x69\xa4\xba\x41\xef\xe7\xbb\xc8\xfa\x8f\x95\xab\xbf\x02\x00\x00\xff\xff\x87\x4f\x29\x98\xbe\x08\x00\x00")

func webserverIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_webserverIndexHtml,
		"webserver/index.html",
	)
}

func webserverIndexHtml() (*asset, error) {
	bytes, err := webserverIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "webserver/index.html", size: 2238, mode: os.FileMode(420), modTime: time.Unix(1571730855, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webserverTestGo_backup = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xcb\x4a\x34\x31\x10\x85\xf7\xf3\x14\xf9\xf3\x33\x90\xc0\xd0\xd1\xed\xc0\x2c\xdc\x28\x6e\x44\x14\x04\x51\x17\x35\x3d\x95\x9e\x62\x72\x69\x92\xb4\x17\x64\xde\x5d\x92\xb6\x2f\x2a\xae\xcc\xa6\x4f\xa7\x4e\xea\x3b\x45\x29\xc5\x5a\xa8\x0f\xd0\x20\xb3\x40\x6e\xb1\x50\x8a\x91\x6d\x7d\x48\x4c\x64\x9d\x0f\xd7\x36\xf1\xf1\xa7\xa1\xb4\xef\xb6\x55\xed\xad\x8a\x16\x8c\xd1\x14\xf7\x2a\x92\x6d\x0d\xbe\x81\x35\x93\x91\xbc\x22\xdf\x25\x9a\x5d\xf9\x58\xb4\x2c\x18\xdd\xb9\xba\x40\x85\x64\xef\x83\x45\x93\x41\x07\x16\xd9\x7a\xc3\x7c\xac\xce\x42\x13\x1f\x4e\x9f\x86\x6a\xf4\x5d\xa8\x71\xc5\x30\x84\x6c\xe8\xdb\x57\x37\x08\xbb\x73\x32\x28\x86\xc7\x72\xf0\x93\x2e\xd6\x7f\x1b\xe6\xc8\x4c\x90\x7c\x5a\x70\x54\x0b\x0c\x61\x34\x1f\x07\x91\xc7\x18\x19\xd3\x64\xd5\x15\xbe\xdc\x83\x35\xa2\x4f\xf1\x47\x88\x52\x6c\x0b\x61\xc4\x14\xc0\x05\x26\xc1\xb7\x10\xb8\xcc\xf2\xd2\xed\xf0\x55\x9c\xc8\xea\x36\x05\x72\x8d\x90\xb3\xa7\xbf\x30\x3f\x3f\x3f\xb1\x4a\x7d\x21\x6b\x9b\xaa\xeb\x40\x2e\x69\xc1\xef\xc0\x74\xb8\x66\xcb\xff\xcf\x8f\x8e\xaf\x72\xa8\x7e\x3d\x65\x1b\x33\xdf\x32\x96\xfa\x14\xb4\xf6\x5d\x88\x18\xbf\x85\x2d\xa5\x04\xf1\xc0\x65\xdf\xe7\xf8\x11\x00\x00\xff\xff\x43\x23\xeb\xd0\x63\x02\x00\x00")

func webserverTestGo_backupBytes() ([]byte, error) {
	return bindataRead(
		_webserverTestGo_backup,
		"webserver/test.go_backup",
	)
}

func webserverTestGo_backup() (*asset, error) {
	bytes, err := webserverTestGo_backupBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "webserver/test.go_backup", size: 611, mode: os.FileMode(436), modTime: time.Unix(1571729523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webserverTestYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcb\xcf\xb7\x52\x30\xe4\x4a\x4a\x2c\xb2\xe2\x52\x50\xd0\x55\xc8\xcf\x4b\x05\xd3\x25\xe5\xf9\x80\x00\x00\x00\xff\xff\x6c\xbe\xb4\x1f\x1b\x00\x00\x00")

func webserverTestYmlBytes() ([]byte, error) {
	return bindataRead(
		_webserverTestYml,
		"webserver/test.yml",
	)
}

func webserverTestYml() (*asset, error) {
	bytes, err := webserverTestYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "webserver/test.yml", size: 27, mode: os.FileMode(436), modTime: time.Unix(1571728469, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webserverWebService = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\xb1\x0e\x82\x30\x10\x06\xe0\xfd\xde\x05\x79\x82\x2e\x06\x07\x63\x5c\x44\xc3\x40\x88\x39\xcb\x2f\xb9\x58\x5b\x72\x3d\x90\xbe\xbd\x89\x93\xeb\x97\xaf\xbf\x45\xb1\x81\x1a\x64\xaf\x32\x9b\xa4\xe8\x88\xfa\x16\xba\x8a\xc7\x40\x5d\xd2\x97\xc4\xa9\x11\x85\xb7\xa4\xc5\xd5\x2b\x6b\x7d\x1f\xd9\x98\x0e\x1b\x7c\x6b\xac\xf6\x87\xf5\x07\x0f\x3a\x49\x08\xe7\x34\xc2\xcd\x9a\x3c\x72\xa6\x0b\xf2\xef\xa5\x58\x3d\x59\xc2\xa2\xa0\x6b\x99\xe1\xb0\xc1\x13\xf5\xc7\x98\x8d\x43\x18\xa8\xe3\x68\x18\xf7\xc5\xbd\x97\x60\x52\x2d\x19\xba\x33\xd6\x09\xf6\x0d\x00\x00\xff\xff\x41\x73\x5f\x5d\xa7\x00\x00\x00")

func webserverWebServiceBytes() ([]byte, error) {
	return bindataRead(
		_webserverWebService,
		"webserver/web.service",
	)
}

func webserverWebService() (*asset, error) {
	bytes, err := webserverWebServiceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "webserver/web.service", size: 167, mode: os.FileMode(436), modTime: time.Unix(1571726853, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _webserverWebserverGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x71\x6b\xe3\xc6\x13\xfd\x5f\x9f\x62\x7e\x82\xf0\x93\x5a\x45\x76\x8e\x50\x0e\xb7\x2e\xa4\x69\x9c\x14\xae\x39\x13\xa7\x94\xc2\x81\x59\x4b\x23\x6b\x89\xb4\xeb\xce\x8e\xec\xa4\x47\xbe\x7b\xd9\x95\x6c\x4b\x4e\x9c\xb8\xa4\x85\xc2\x55\xf9\xc3\xd2\xee\x9b\xd1\xee\x9b\xa7\xd9\x97\x85\x48\xee\xc4\x1c\xa1\x14\x52\x79\x9e\x2c\x17\x9a\x18\x02\x0f\x00\xc0\xcf\x4a\xf6\xeb\xbb\x42\xcf\x9b\x3b\x85\xdc\xcb\x99\x17\xcd\xa3\xd4\x3d\xa9\x2b\x96\x85\x0f\xbd\x1e\x24\x7a\xf1\x00\x2b\xc9\x39\x9c\x19\x83\x5c\x43\xe6\x92\xf3\x6a\x16\x27\xba\xec\x99\x52\x14\x45\x26\x4d\xde\x33\xb2\x5c\x14\xf8\x20\xca\xc2\xf7\x42\xcf\xcb\x2a\x95\xc0\xb9\x5e\x3c\x04\x86\x92\x08\x52\xc3\x60\x98\xa4\x9a\x87\x30\xd3\xba\x80\xcf\x2e\x55\xaf\x07\x84\x22\x85\x54\xb0\x80\x8c\x74\xd9\x7a\x8d\x1d\x8b\x00\x89\x60\x30\xac\x87\x6d\xaa\xd0\xcd\xc9\xcc\x4d\xfc\x6f\x08\x4a\xae\x73\xd9\x2b\x2b\x39\x1e\x93\x54\x9c\x05\xbe\x0b\x81\x95\x30\xa0\x34\x43\xa6\x2b\x95\xc6\x7e\xb8\x81\x12\x72\x45\x0a\x32\x51\x18\x74\x83\x8f\xde\x7a\x49\x2b\x92\x8c\xc0\x1a\x32\x59\xd4\x73\x48\xf4\xce\x2e\xa3\x66\x26\xfe\xd5\x02\x46\xb2\xc0\x20\x35\x1c\x35\x2b\xed\x7f\x73\x7a\xda\x5e\xdd\xbb\x97\x97\x67\xc3\xed\xea\xd4\xff\xd9\xbd\x90\x51\xbd\xb2\xbc\xd6\x30\x53\x85\xde\xa3\xe7\x2d\x05\x41\x52\x11\xa1\xe2\xa9\x61\x5c\x80\x54\x0c\x43\xe8\x7b\xf5\x14\xa1\xa9\xd9\x1e\xd6\xa5\xf0\x13\x5d\x91\xc1\xd8\x55\x29\x82\xce\x63\x58\x87\x18\x5d\x51\x82\x11\x4c\x61\xb3\xdb\x1b\x14\xa9\xdb\xec\x0e\xde\xc2\xed\x6d\x0d\xde\xd6\x3f\xbe\xc6\xd5\x6f\xa2\x2c\x82\x3a\x57\x0d\x64\x61\xee\xcc\x54\x55\xe5\x0c\xa9\x0e\x70\xd0\x4b\xe4\x75\x5a\xe3\x87\xf6\xf1\x8c\x48\x3c\x4c\xe4\x1f\x18\x84\x5e\x7d\x39\x29\x25\x39\x26\x77\x53\x85\xf7\x1c\x84\x5b\xf1\x98\x1c\x96\x48\x32\x7b\x88\x4d\xbe\xa6\x3e\xb0\xe4\x84\x2d\xd6\x3b\x04\x0d\xbb\x8f\x5f\xc3\x89\xb7\x01\xca\x2c\xe8\x4c\x7e\xd7\x59\x75\xb8\xcd\x68\x2f\x3b\x35\x5d\x08\xce\xed\x6e\x06\x7b\xb7\xf3\x93\x4a\xf1\xbe\x93\x36\xac\x51\x36\xde\x0f\xe3\x89\xfb\x28\x82\xb0\x93\xdb\x15\xcb\x8a\x65\xb2\x68\xd4\x72\x64\xfc\x68\xfb\xca\xd0\xd6\xae\x4e\x19\x97\x69\x4b\x35\x8f\x80\x85\x41\xf8\xfc\x34\x9b\x9f\x49\x25\x4d\x6e\xe1\xfb\x82\x5f\xe3\xea\x18\x4e\x5a\x2f\x82\x46\x95\x8f\x9d\x02\xcd\x44\x72\xb7\x29\xd0\x21\xc9\x76\x39\xff\x7e\x08\xfd\x16\xd3\xff\x14\xcb\x8e\x93\x56\xf2\xa7\x8c\x3c\xa1\xb2\xa6\x51\x2a\x26\xfd\x12\x8b\x3b\x9b\xee\xef\xd0\x64\x7b\x45\xb0\x02\xdb\x70\xe3\x1b\x34\x0b\xad\x0c\xba\x76\x42\x11\x10\x7c\xd5\x8c\xff\x5e\xa1\xe1\x86\x06\x99\x01\xc5\xbf\xdc\x7c\x88\xc7\x82\x73\xdb\x53\xfc\xde\xd4\x66\xf1\x5b\x6b\x73\x61\x17\x44\x9a\x82\x55\x04\xfe\x69\xff\xb4\xd5\xf4\x7a\x0e\x1d\xd5\xa0\x09\x0b\xae\xcc\xb5\xe6\x91\x9d\xdb\xed\x37\xed\x46\xb8\x8a\xaf\x50\xa4\x48\x41\x18\x4f\x2c\x95\xe7\x22\xc9\xf1\xf8\x5c\x5b\x02\x5c\xf7\x50\xfa\x38\xb1\x63\x11\x28\x7d\x6c\x58\x13\x46\x50\x56\x86\x8f\x09\x97\xa2\x90\xa9\x60\x6c\x78\xd9\x4d\x35\x26\x31\x2f\x45\x3b\xc7\x1e\xe0\xc5\xfd\x42\x12\x5a\xed\xfb\x7d\xdb\xa1\x2c\xc6\xac\x24\x27\x39\x50\xfc\x33\x72\xae\xd3\xf6\x87\x2e\x0c\x82\x7f\x79\x71\xeb\x0f\x3a\xa2\x6e\xb7\xdd\x4b\x64\x96\x6a\x0e\x97\x17\xb7\x71\x1c\x7f\x52\x3b\xfa\xaf\x39\x42\x5a\xd6\xed\x7d\x15\x01\x3d\x2b\x8e\x4d\x3d\x5d\x47\x7a\x73\x3d\x6d\x96\xc3\xeb\xe9\xd0\x5f\x70\x3d\x9b\xd3\x7f\x30\x04\x8a\xc7\x82\x0c\x8e\x34\x95\x41\xf8\xed\xf3\x9e\xa0\xad\x82\x51\xd3\x4f\x2d\xa9\xad\x48\x1b\x38\x80\xa3\xa5\xef\xfc\x46\xf8\x24\xb4\x45\xe6\xfa\x7a\x7c\x55\x61\xd7\x78\xcf\xb0\xd6\x58\xb7\xc9\xb6\xce\xb2\xa7\xea\xbb\xc1\x54\x12\x26\xbc\x16\x5f\xaf\x5b\xea\x09\xe2\x47\xce\x91\xb6\x42\x74\x3a\x74\x8d\xf7\xcd\x3a\xb4\x59\x0e\xd7\xa1\x43\xff\xa7\xc3\x7f\xb9\x0e\x7f\x10\xc9\xdd\x0b\x32\xac\x4f\xec\xbf\x41\x86\x4d\x43\x24\xad\x0f\x6e\x88\xb0\x57\x89\x87\x8b\xf0\x4b\x16\xe0\x9b\x0f\x36\x69\x7d\x53\x9c\x73\xed\xff\xa1\x73\xb2\xd9\xff\x1f\x9d\x95\x5b\x9b\x6d\xeb\xbd\x40\x18\x98\x17\x7a\x26\x0a\x58\x0a\x92\x62\x56\xa0\xf3\xe8\x0d\xa4\x31\x65\x1b\x9f\xdf\x7c\x1e\x07\x58\xfd\x4e\x82\x1f\x05\x8b\xc6\x98\xbd\x9c\xa1\xf6\x7d\xfd\xb0\x3d\x65\x83\x77\x2d\xdf\x5f\xb2\x91\xfd\x3d\xde\xd1\xdb\xa5\xfc\xc8\x7c\x52\x1d\x5b\xfe\x0c\x24\xdd\x40\x36\xff\x47\xac\xf9\x5a\x1b\xca\x4d\x09\x76\x0b\x02\xaf\xbb\x4e\x6f\x53\xdb\x2b\xa1\xd2\x02\x47\x95\x4a\x02\xf7\xad\xda\xef\x30\xdc\x33\x3d\x6d\x1c\xa1\xfd\xd9\x8b\x69\x5c\x86\xfd\xd9\x8b\x69\x4e\x00\xfb\xf3\xcc\xe6\x27\x2c\xc8\x69\xd2\x58\xdd\x11\x64\x9a\x80\xd1\xb8\xa1\xab\xdb\xdb\x31\x8c\x3f\x4e\x3a\x62\xdd\x36\x54\xf7\xae\x0f\xd2\x30\xaa\x33\x95\x3a\xdd\x06\x7e\x3f\x76\x7f\x83\xf7\xfd\xf7\x27\x76\x65\xb2\xd8\xd7\x6b\x0b\x3d\x8f\x47\x82\x45\x11\x6c\xfa\xa8\x15\xf6\x9f\x01\x00\x00\xff\xff\x48\x0b\x76\xf4\x1b\x11\x00\x00")

func webserverWebserverGoBytes() ([]byte, error) {
	return bindataRead(
		_webserverWebserverGo,
		"webserver/webserver.go",
	)
}

func webserverWebserverGo() (*asset, error) {
	bytes, err := webserverWebserverGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "webserver/webserver.go", size: 4379, mode: os.FileMode(436), modTime: time.Unix(1571735364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"Dockerfile":               dockerfile,
	"course.yaml":              courseYaml,
	"current.md":               currentMd,
	"docker-compose.yaml":      dockerComposeYaml,
	"finish.md":                finishMd,
	"index.html":               indexHtml,
	"intro.md":                 introMd,
	"tasks/1/courseData.sh":    tasks1CoursedataSh,
	"tasks/1/foreground.sh":    tasks1ForegroundSh,
	"tasks/1/task.md":          tasks1TaskMd,
	"tasks/1/verify.sh":        tasks1VerifySh,
	"tasks/2/courseData.sh":    tasks2CoursedataSh,
	"tasks/2/foreground.sh":    tasks2ForegroundSh,
	"tasks/2/task.md":          tasks2TaskMd,
	"tasks/2/verify.sh":        tasks2VerifySh,
	"tasks/3/courseData.sh":    tasks3CoursedataSh,
	"tasks/3/foreground.sh":    tasks3ForegroundSh,
	"tasks/3/task.md":          tasks3TaskMd,
	"tasks/3/verify.sh":        tasks3VerifySh,
	"tasks/4/courseData.sh":    tasks4CoursedataSh,
	"tasks/4/foreground.sh":    tasks4ForegroundSh,
	"tasks/4/task.md":          tasks4TaskMd,
	"tasks/4/verify.sh":        tasks4VerifySh,
	"tasks/5/courseData.sh":    tasks5CoursedataSh,
	"tasks/5/foreground.sh":    tasks5ForegroundSh,
	"tasks/5/task.md":          tasks5TaskMd,
	"tasks/5/verify.sh":        tasks5VerifySh,
	"tasks/6/courseData.sh":    tasks6CoursedataSh,
	"tasks/6/foreground.sh":    tasks6ForegroundSh,
	"tasks/6/task.md":          tasks6TaskMd,
	"tasks/6/verify.sh":        tasks6VerifySh,
	"tasks/7/courseData.sh":    tasks7CoursedataSh,
	"tasks/7/foreground.sh":    tasks7ForegroundSh,
	"tasks/7/task.md":          tasks7TaskMd,
	"tasks/7/verify.sh":        tasks7VerifySh,
	"webserver/index.html":     webserverIndexHtml,
	"webserver/test.go_backup": webserverTestGo_backup,
	"webserver/test.yml":       webserverTestYml,
	"webserver/web.service":    webserverWebService,
	"webserver/webserver.go":   webserverWebserverGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"Dockerfile":          &bintree{dockerfile, map[string]*bintree{}},
	"course.yaml":         &bintree{courseYaml, map[string]*bintree{}},
	"current.md":          &bintree{currentMd, map[string]*bintree{}},
	"docker-compose.yaml": &bintree{dockerComposeYaml, map[string]*bintree{}},
	"finish.md":           &bintree{finishMd, map[string]*bintree{}},
	"index.html":          &bintree{indexHtml, map[string]*bintree{}},
	"intro.md":            &bintree{introMd, map[string]*bintree{}},
	"tasks": &bintree{nil, map[string]*bintree{
		"1": &bintree{nil, map[string]*bintree{
			"courseData.sh": &bintree{tasks1CoursedataSh, map[string]*bintree{}},
			"foreground.sh": &bintree{tasks1ForegroundSh, map[string]*bintree{}},
			"task.md":       &bintree{tasks1TaskMd, map[string]*bintree{}},
			"verify.sh":     &bintree{tasks1VerifySh, map[string]*bintree{}},
		}},
		"2": &bintree{nil, map[string]*bintree{
			"courseData.sh": &bintree{tasks2CoursedataSh, map[string]*bintree{}},
			"foreground.sh": &bintree{tasks2ForegroundSh, map[string]*bintree{}},
			"task.md":       &bintree{tasks2TaskMd, map[string]*bintree{}},
			"verify.sh":     &bintree{tasks2VerifySh, map[string]*bintree{}},
		}},
		"3": &bintree{nil, map[string]*bintree{
			"courseData.sh": &bintree{tasks3CoursedataSh, map[string]*bintree{}},
			"foreground.sh": &bintree{tasks3ForegroundSh, map[string]*bintree{}},
			"task.md":       &bintree{tasks3TaskMd, map[string]*bintree{}},
			"verify.sh":     &bintree{tasks3VerifySh, map[string]*bintree{}},
		}},
		"4": &bintree{nil, map[string]*bintree{
			"courseData.sh": &bintree{tasks4CoursedataSh, map[string]*bintree{}},
			"foreground.sh": &bintree{tasks4ForegroundSh, map[string]*bintree{}},
			"task.md":       &bintree{tasks4TaskMd, map[string]*bintree{}},
			"verify.sh":     &bintree{tasks4VerifySh, map[string]*bintree{}},
		}},
		"5": &bintree{nil, map[string]*bintree{
			"courseData.sh": &bintree{tasks5CoursedataSh, map[string]*bintree{}},
			"foreground.sh": &bintree{tasks5ForegroundSh, map[string]*bintree{}},
			"task.md":       &bintree{tasks5TaskMd, map[string]*bintree{}},
			"verify.sh":     &bintree{tasks5VerifySh, map[string]*bintree{}},
		}},
		"6": &bintree{nil, map[string]*bintree{
			"courseData.sh": &bintree{tasks6CoursedataSh, map[string]*bintree{}},
			"foreground.sh": &bintree{tasks6ForegroundSh, map[string]*bintree{}},
			"task.md":       &bintree{tasks6TaskMd, map[string]*bintree{}},
			"verify.sh":     &bintree{tasks6VerifySh, map[string]*bintree{}},
		}},
		"7": &bintree{nil, map[string]*bintree{
			"courseData.sh": &bintree{tasks7CoursedataSh, map[string]*bintree{}},
			"foreground.sh": &bintree{tasks7ForegroundSh, map[string]*bintree{}},
			"task.md":       &bintree{tasks7TaskMd, map[string]*bintree{}},
			"verify.sh":     &bintree{tasks7VerifySh, map[string]*bintree{}},
		}},
	}},
	"webserver": &bintree{nil, map[string]*bintree{
		"index.html":     &bintree{webserverIndexHtml, map[string]*bintree{}},
		"test.go_backup": &bintree{webserverTestGo_backup, map[string]*bintree{}},
		"test.yml":       &bintree{webserverTestYml, map[string]*bintree{}},
		"web.service":    &bintree{webserverWebService, map[string]*bintree{}},
		"webserver.go":   &bintree{webserverWebserverGo, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
